# Note: If you modify this file, you must restart the XL Deploy server.

# If set to true, files are directly copied to the target directory without first being uploaded to the staging or temporary directory (like versions of XL Deploy prior to 4.0.0) (inherited from: file.DeployedFolder.copyDirectlyToTargetPath)
#bnp.DeployedFolderApplication.copyDirectlyToTargetPath=false
# Not applicable for this type. (inherited from: file.DeployedFolder.targetFileName)
#bnp.DeployedFolderApplication.targetFileName=null
# The sub directories on the target machine are not deleted if files other than that copied by XL Deploy are present.  (inherited from: file.DeployedFolder.targetPathSharedSubDirectories)
#bnp.DeployedFolderApplication.targetPathSharedSubDirectories=false
# The delimiters used indicate placeholders, defaults to '{{ }}'. This is a 5 character string with a space in the middle, the first two are the leading delimiter, the last two are the closing delimiter (inherited from: file.Folder.delimiters)
#bnp.ExtendedApplicationFolder.delimiters={{ }}
# A map that maps regular expressions matching the full path of file(s) in the artifact to character set encodings (inherited from: file.Folder.fileEncodings)
#bnp.ExtendedApplicationFolder.fileEncodings=.+\.properties:ISO-8859-1
# Regular expression that matches file names of text files (inherited from: file.Folder.textFileNamesRegex)
#bnp.ExtendedApplicationFolder.textFileNamesRegex=.+\.(cfg | conf | config | ini | properties | props | txt | asp | aspx | htm | html | jsf | jsp | xht | xhtml | sql | xml | xsd | xsl | xslt)
# Order of the command
#cmd.Command.order=50
# Indicates whether the undoCommand should be run on an upgrade
#cmd.Command.runUndoCommandOnUpgrade=true
# Order of the undo command
#cmd.Command.undoOrder=49
# Order of the command
#cmd.DeployedCommand.order=50
# Order of the undo command
#cmd.DeployedCommand.undoOrder=49
# The delimiters used indicate placeholders, defaults to '{{ }}'. This is a 5 character string with a space in the middle, the first two are the leading delimiter, the last two are the closing delimiter (inherited from: udm.BaseDeployableArchiveArtifact.delimiters)
#file.Archive.delimiters={{ }}
# A map that maps regular expressions matching the full path of file(s) in the artifact to character set encodings (inherited from: udm.BaseDeployableArchiveArtifact.fileEncodings)
#file.Archive.fileEncodings=.+\.properties:ISO-8859-1
# Regular expression that matches file names of text files (inherited from: udm.BaseDeployableArchiveArtifact.textFileNamesRegex)
#file.Archive.textFileNamesRegex=.+\.(cfg | conf | config | ini | properties | props | txt | asp | aspx | htm | html | jsf | jsp | xht | xhtml | sql | xml | xsd | xsl | xslt)
# If set to true, files are directly copied to the target directory without first being uploaded to the staging or temporary directory (like versions of XL Deploy prior to 4.0.0) (inherited from: file.DeployedArtifactOnHost.copyDirectlyToTargetPath)
#file.DeployedArchive.copyDirectlyToTargetPath=false
# The sub directories on the target machine are not deleted if files other than that copied by XL Deploy are present.  (inherited from: file.DeployedArtifactOnHost.targetPathSharedSubDirectories)
#file.DeployedArchive.targetPathSharedSubDirectories=false
# If set to true, files are directly copied to the target directory without first being uploaded to the staging or temporary directory (like versions of XL Deploy prior to 4.0.0)
#file.DeployedArtifactOnHost.copyDirectlyToTargetPath=false
# Create the targetPath on the host if it does not exist.
#file.DeployedArtifactOnHost.createTargetPath=false
# Is the targetPath shared by others on the host. When true, the targetPath is not deleted during undeployment; only the artifacts copied to it.
#file.DeployedArtifactOnHost.targetPathShared=true
# The sub directories on the target machine are not deleted if files other than that copied by XL Deploy are present. 
#file.DeployedArtifactOnHost.targetPathSharedSubDirectories=false
# If set to true, files are directly copied to the target directory without first being uploaded to the staging or temporary directory (like versions of XL Deploy prior to 4.0.0) (inherited from: file.DeployedArtifactOnHost.copyDirectlyToTargetPath)
#file.DeployedFile.copyDirectlyToTargetPath=false
# The sub directories on the target machine are not deleted if files other than that copied by XL Deploy are present.  (inherited from: file.DeployedArtifactOnHost.targetPathSharedSubDirectories)
#file.DeployedFile.targetPathSharedSubDirectories=false
# If set to true, files are directly copied to the target directory without first being uploaded to the staging or temporary directory (like versions of XL Deploy prior to 4.0.0) (inherited from: file.DeployedArtifactOnHost.copyDirectlyToTargetPath)
#file.DeployedFolder.copyDirectlyToTargetPath=false
# Not applicable for this type.
#file.DeployedFolder.targetFileName=null
# The sub directories on the target machine are not deleted if files other than that copied by XL Deploy are present.  (inherited from: file.DeployedArtifactOnHost.targetPathSharedSubDirectories)
#file.DeployedFolder.targetPathSharedSubDirectories=false
# The delimiters used indicate placeholders, defaults to '{{ }}'. This is a 5 character string with a space in the middle, the first two are the leading delimiter, the last two are the closing delimiter (inherited from: udm.BaseDeployableFileArtifact.delimiters)
#file.File.delimiters={{ }}
# A map that maps regular expressions matching the full path of file(s) in the artifact to character set encodings (inherited from: udm.BaseDeployableFileArtifact.fileEncodings)
#file.File.fileEncodings=.+\.properties:ISO-8859-1
# Regular expression that matches file names of text files (inherited from: udm.BaseDeployableFileArtifact.textFileNamesRegex)
#file.File.textFileNamesRegex=.+\.(cfg | conf | config | ini | properties | props | txt | asp | aspx | htm | html | jsf | jsp | xht | xhtml | sql | xml | xsd | xsl | xslt)
# The delimiters used indicate placeholders, defaults to '{{ }}'. This is a 5 character string with a space in the middle, the first two are the leading delimiter, the last two are the closing delimiter (inherited from: udm.BaseDeployableFolderArtifact.delimiters)
#file.Folder.delimiters={{ }}
# A map that maps regular expressions matching the full path of file(s) in the artifact to character set encodings (inherited from: udm.BaseDeployableFolderArtifact.fileEncodings)
#file.Folder.fileEncodings=.+\.properties:ISO-8859-1
# Regular expression that matches file names of text files (inherited from: udm.BaseDeployableFolderArtifact.textFileNamesRegex)
#file.Folder.textFileNamesRegex=.+\.(cfg | conf | config | ini | properties | props | txt | asp | aspx | htm | html | jsf | jsp | xht | xhtml | sql | xml | xsd | xsl | xslt)
# Options for the create step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources).
#generic.AbstractDeployed.createOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the create operation.
#generic.AbstractDeployed.createOrder=50
# Create Verb
#generic.AbstractDeployed.createVerb=Create
# Options for the destroy step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources).
#generic.AbstractDeployed.destroyOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the destroy operation.
#generic.AbstractDeployed.destroyOrder=40
# Destroy Verb
#generic.AbstractDeployed.destroyVerb=Destroy
# Additional classpath resources that should be uploaded to the working directory before executing the inspect script.
#generic.AbstractDeployed.inspectClasspathResources=null
# Classpath to the script used to inspect the generic container.
#generic.AbstractDeployed.inspectScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the inspect script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory.
#generic.AbstractDeployed.inspectTemplateClasspathResources=null
# Options for the modify step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources).
#generic.AbstractDeployed.modifyOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the modify operation.
#generic.AbstractDeployed.modifyOrder=50
# Modify Verb
#generic.AbstractDeployed.modifyVerb=Modify
# Options for the noop step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources).
#generic.AbstractDeployed.noopOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the noop operation.
#generic.AbstractDeployed.noopOrder=50
# Noop Verb
#generic.AbstractDeployed.noopVerb=Modify
# The generic container requires a restart for the action performed by this deployed.
#generic.AbstractDeployed.restartRequired=false
# The generic container requires a restart for the NOOP action performed by this deployed.
#generic.AbstractDeployed.restartRequiredForNoop=false
# Options for the create step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.AbstractDeployed.createOptions)
#generic.AbstractDeployedArtifact.createOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the create operation. (inherited from: generic.AbstractDeployed.createOrder)
#generic.AbstractDeployedArtifact.createOrder=50
# Create the target directory on the generic server if it does not exist.
#generic.AbstractDeployedArtifact.createTargetDirectory=false
# Create Verb (inherited from: generic.AbstractDeployed.createVerb)
#generic.AbstractDeployedArtifact.createVerb=Create
# Options for the destroy step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.AbstractDeployed.destroyOptions)
#generic.AbstractDeployedArtifact.destroyOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the destroy operation. (inherited from: generic.AbstractDeployed.destroyOrder)
#generic.AbstractDeployedArtifact.destroyOrder=40
# Destroy Verb (inherited from: generic.AbstractDeployed.destroyVerb)
#generic.AbstractDeployedArtifact.destroyVerb=Destroy
# Additional classpath resources that should be uploaded to the working directory before executing the inspect script. (inherited from: generic.AbstractDeployed.inspectClasspathResources)
#generic.AbstractDeployedArtifact.inspectClasspathResources=null
# Classpath to the script used to inspect the generic container. (inherited from: generic.AbstractDeployed.inspectScript)
#generic.AbstractDeployedArtifact.inspectScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the inspect script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.AbstractDeployed.inspectTemplateClasspathResources)
#generic.AbstractDeployedArtifact.inspectTemplateClasspathResources=null
# Options for the modify step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.AbstractDeployed.modifyOptions)
#generic.AbstractDeployedArtifact.modifyOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the modify operation. (inherited from: generic.AbstractDeployed.modifyOrder)
#generic.AbstractDeployedArtifact.modifyOrder=50
# Modify Verb (inherited from: generic.AbstractDeployed.modifyVerb)
#generic.AbstractDeployedArtifact.modifyVerb=Modify
# Options for the noop step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.AbstractDeployed.noopOptions)
#generic.AbstractDeployedArtifact.noopOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the noop operation. (inherited from: generic.AbstractDeployed.noopOrder)
#generic.AbstractDeployedArtifact.noopOrder=50
# Noop Verb (inherited from: generic.AbstractDeployed.noopVerb)
#generic.AbstractDeployedArtifact.noopVerb=Modify
# The generic container requires a restart for the action performed by this deployed. (inherited from: generic.AbstractDeployed.restartRequired)
#generic.AbstractDeployedArtifact.restartRequired=false
# The generic container requires a restart for the NOOP action performed by this deployed. (inherited from: generic.AbstractDeployed.restartRequiredForNoop)
#generic.AbstractDeployedArtifact.restartRequiredForNoop=false
# Path to which artifact must be copied to on the generic server.
#generic.AbstractDeployedArtifact.targetDirectory=null
# Is the target directory shared by others on the generic server. When true, the target directory is not deleted during a destroy operation; only the artifacts copied to it.
#generic.AbstractDeployedArtifact.targetDirectoryShared=true
# The delimiters used indicate placeholders, defaults to '{{ }}'. This is a 5 character string with a space in the middle, the first two are the leading delimiter, the last two are the closing delimiter (inherited from: udm.BaseDeployableArchiveArtifact.delimiters)
#generic.Archive.delimiters={{ }}
# A map that maps regular expressions matching the full path of file(s) in the artifact to character set encodings (inherited from: udm.BaseDeployableArchiveArtifact.fileEncodings)
#generic.Archive.fileEncodings=.+\.properties:ISO-8859-1
# Regular expression that matches file names of text files (inherited from: udm.BaseDeployableArchiveArtifact.textFileNamesRegex)
#generic.Archive.textFileNamesRegex=.+\.(cfg | conf | config | ini | properties | props | txt | asp | aspx | htm | html | jsf | jsp | xht | xhtml | sql | xml | xsd | xsl | xslt)
# Additional classpath resources that should be uploaded to the working directory before executing the inspect script.
#generic.BaseGenericContainer.inspectClasspathResources=null
# Classpath to the script used to inspect the generic container.
#generic.BaseGenericContainer.inspectScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the inspect script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory.
#generic.BaseGenericContainer.inspectTemplateClasspathResources=null
# Additional classpath resources that should be uploaded to the working directory before executing the restart script.
#generic.BaseGenericContainer.restartClasspathResources=null
# The order of the restart container step in the step list.
#generic.BaseGenericContainer.restartOrder=90
# Classpath to the script used to restart the generic container.
#generic.BaseGenericContainer.restartScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the restart script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory.
#generic.BaseGenericContainer.restartTemplateClasspathResources=null
# The time to wait in seconds for a container restart action.
#generic.BaseGenericContainer.restartWaitTime=0
# Additional classpath resources that should be uploaded to the working directory before executing the start script.
#generic.BaseGenericContainer.startClasspathResources=null
# The order of the start container step in the step list.
#generic.BaseGenericContainer.startOrder=90
# Classpath to the script used to start the generic container.
#generic.BaseGenericContainer.startScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the start script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory.
#generic.BaseGenericContainer.startTemplateClasspathResources=null
# The time to wait in seconds for a container start action.
#generic.BaseGenericContainer.startWaitTime=0
# Additional classpath resources that should be uploaded to the working directory before executing the stop script.
#generic.BaseGenericContainer.stopClasspathResources=null
# The order of the stop container step in the step list.
#generic.BaseGenericContainer.stopOrder=10
# Classpath to the script used to stop the generic container.
#generic.BaseGenericContainer.stopScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the stop script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory.
#generic.BaseGenericContainer.stopTemplateClasspathResources=null
# The time to wait in seconds for a container stop action.
#generic.BaseGenericContainer.stopWaitTime=0
# Additional classpath resources that should be uploaded to the working directory before executing the inspect script. (inherited from: generic.BaseGenericContainer.inspectClasspathResources)
#generic.Container.inspectClasspathResources=null
# Classpath to the script used to inspect the generic container. (inherited from: generic.BaseGenericContainer.inspectScript)
#generic.Container.inspectScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the inspect script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.BaseGenericContainer.inspectTemplateClasspathResources)
#generic.Container.inspectTemplateClasspathResources=null
# Additional classpath resources that should be uploaded to the working directory before executing the restart script. (inherited from: generic.BaseGenericContainer.restartClasspathResources)
#generic.Container.restartClasspathResources=null
# The order of the restart container step in the step list. (inherited from: generic.BaseGenericContainer.restartOrder)
#generic.Container.restartOrder=90
# Classpath to the script used to restart the generic container. (inherited from: generic.BaseGenericContainer.restartScript)
#generic.Container.restartScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the restart script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.BaseGenericContainer.restartTemplateClasspathResources)
#generic.Container.restartTemplateClasspathResources=null
# The time to wait in seconds for a container restart action. (inherited from: generic.BaseGenericContainer.restartWaitTime)
#generic.Container.restartWaitTime=0
# Additional classpath resources that should be uploaded to the working directory before executing the start script. (inherited from: generic.BaseGenericContainer.startClasspathResources)
#generic.Container.startClasspathResources=null
# The order of the start container step in the step list. (inherited from: generic.BaseGenericContainer.startOrder)
#generic.Container.startOrder=90
# Classpath to the script used to start the generic container. (inherited from: generic.BaseGenericContainer.startScript)
#generic.Container.startScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the start script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.BaseGenericContainer.startTemplateClasspathResources)
#generic.Container.startTemplateClasspathResources=null
# The time to wait in seconds for a container start action. (inherited from: generic.BaseGenericContainer.startWaitTime)
#generic.Container.startWaitTime=0
# Additional classpath resources that should be uploaded to the working directory before executing the stop script. (inherited from: generic.BaseGenericContainer.stopClasspathResources)
#generic.Container.stopClasspathResources=null
# The order of the stop container step in the step list. (inherited from: generic.BaseGenericContainer.stopOrder)
#generic.Container.stopOrder=10
# Classpath to the script used to stop the generic container. (inherited from: generic.BaseGenericContainer.stopScript)
#generic.Container.stopScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the stop script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.BaseGenericContainer.stopTemplateClasspathResources)
#generic.Container.stopTemplateClasspathResources=null
# The time to wait in seconds for a container stop action. (inherited from: generic.BaseGenericContainer.stopWaitTime)
#generic.Container.stopWaitTime=0
# If set to true, files are directly copied to the target directory without first being uploaded to the staging or temporary directory (like versions of XL Deploy prior to 4.0.0)
#generic.CopiedArtifact.copyDirectlyToTargetPath=false
# Options for the create step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.AbstractDeployedArtifact.createOptions)
#generic.CopiedArtifact.createOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the create operation. (inherited from: generic.AbstractDeployedArtifact.createOrder)
#generic.CopiedArtifact.createOrder=50
# Create the target directory on the generic server if it does not exist. (inherited from: generic.AbstractDeployedArtifact.createTargetDirectory)
#generic.CopiedArtifact.createTargetDirectory=false
# Create Verb (inherited from: generic.AbstractDeployedArtifact.createVerb)
#generic.CopiedArtifact.createVerb=Create
# Options for the destroy step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.AbstractDeployedArtifact.destroyOptions)
#generic.CopiedArtifact.destroyOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the destroy operation. (inherited from: generic.AbstractDeployedArtifact.destroyOrder)
#generic.CopiedArtifact.destroyOrder=40
# Destroy Verb (inherited from: generic.AbstractDeployedArtifact.destroyVerb)
#generic.CopiedArtifact.destroyVerb=Destroy
# Additional classpath resources that should be uploaded to the working directory before executing the inspect script. (inherited from: generic.AbstractDeployedArtifact.inspectClasspathResources)
#generic.CopiedArtifact.inspectClasspathResources=null
# Classpath to the script used to inspect the generic container. (inherited from: generic.AbstractDeployedArtifact.inspectScript)
#generic.CopiedArtifact.inspectScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the inspect script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.AbstractDeployedArtifact.inspectTemplateClasspathResources)
#generic.CopiedArtifact.inspectTemplateClasspathResources=null
# Options for the modify step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.AbstractDeployedArtifact.modifyOptions)
#generic.CopiedArtifact.modifyOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the modify operation. (inherited from: generic.AbstractDeployedArtifact.modifyOrder)
#generic.CopiedArtifact.modifyOrder=50
# Modify Verb (inherited from: generic.AbstractDeployedArtifact.modifyVerb)
#generic.CopiedArtifact.modifyVerb=Modify
# Options for the noop step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.AbstractDeployedArtifact.noopOptions)
#generic.CopiedArtifact.noopOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the noop operation. (inherited from: generic.AbstractDeployedArtifact.noopOrder)
#generic.CopiedArtifact.noopOrder=50
# Noop Verb (inherited from: generic.AbstractDeployedArtifact.noopVerb)
#generic.CopiedArtifact.noopVerb=Modify
# If set to true, preserve the existing files on the remote host (do not delete the copied files during the destroy operation). 
#generic.CopiedArtifact.preserveExistingFiles=false
# The generic container requires a restart for the action performed by this deployed. (inherited from: generic.AbstractDeployedArtifact.restartRequired)
#generic.CopiedArtifact.restartRequired=false
# The generic container requires a restart for the NOOP action performed by this deployed. (inherited from: generic.AbstractDeployedArtifact.restartRequiredForNoop)
#generic.CopiedArtifact.restartRequiredForNoop=false
# Path to which artifact must be copied to on the generic server. (inherited from: generic.AbstractDeployedArtifact.targetDirectory)
#generic.CopiedArtifact.targetDirectory=null
# Is the target directory shared by others on the generic server. When true, the target directory is not deleted during a destroy operation; only the artifacts copied to it. (inherited from: generic.AbstractDeployedArtifact.targetDirectoryShared)
#generic.CopiedArtifact.targetDirectoryShared=true
# If set to true, the sub directories on the target machine are not deleted if files other than that copied by XL Deploy are present. Please note that setting this option to true will cause the removal process to be a slower. 
#generic.CopiedArtifact.targetPathSharedSubDirectories=false
# If set to true, the checkpoint is set after the first script in a folder has been executed. Otherwise the checkpoint is set after the last script in a folder has been executed.
#generic.ExecutedFolder.checkpointAfterFirstScript=true
# Additional classpath resources that should be uploaded to the working directory before executing the script.
#generic.ExecutedFolder.classpathResources=null
# Common folder that should be uploaded to the working directory.
#generic.ExecutedFolder.commonScriptFolderName=common
# Options for the create step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.AbstractDeployed.createOptions)
#generic.ExecutedFolder.createOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the create operation. (inherited from: generic.AbstractDeployed.createOrder)
#generic.ExecutedFolder.createOrder=50
# Create Verb (inherited from: generic.AbstractDeployed.createVerb)
#generic.ExecutedFolder.createVerb=Create
# Options for the destroy step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.AbstractDeployed.destroyOptions)
#generic.ExecutedFolder.destroyOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the destroy operation. (inherited from: generic.AbstractDeployed.destroyOrder)
#generic.ExecutedFolder.destroyOrder=40
# Destroy Verb (inherited from: generic.AbstractDeployed.destroyVerb)
#generic.ExecutedFolder.destroyVerb=Destroy
# If set to true, modified scripts are also executed on a MODIFY or a NOOP.
#generic.ExecutedFolder.executeModifiedScripts=true
# If set to true, rollback scripts for modified scripts are also executed on a MODIFY or a NOOP.
#generic.ExecutedFolder.executeRollbackForModifiedScripts=true
# Additional classpath resources that should be uploaded to the working directory before executing the inspect script. (inherited from: generic.AbstractDeployed.inspectClasspathResources)
#generic.ExecutedFolder.inspectClasspathResources=null
# Classpath to the script used to inspect the generic container. (inherited from: generic.AbstractDeployed.inspectScript)
#generic.ExecutedFolder.inspectScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the inspect script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.AbstractDeployed.inspectTemplateClasspathResources)
#generic.ExecutedFolder.inspectTemplateClasspathResources=null
# Options for the modify step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.AbstractDeployed.modifyOptions)
#generic.ExecutedFolder.modifyOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the modify operation. (inherited from: generic.AbstractDeployed.modifyOrder)
#generic.ExecutedFolder.modifyOrder=50
# Modify Verb (inherited from: generic.AbstractDeployed.modifyVerb)
#generic.ExecutedFolder.modifyVerb=Modify
# Options for the noop step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.AbstractDeployed.noopOptions)
#generic.ExecutedFolder.noopOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the noop operation. (inherited from: generic.AbstractDeployed.noopOrder)
#generic.ExecutedFolder.noopOrder=50
# Noop Verb (inherited from: generic.AbstractDeployed.noopVerb)
#generic.ExecutedFolder.noopVerb=Modify
# The generic container requires a restart for the action performed by this deployed. (inherited from: generic.AbstractDeployed.restartRequired)
#generic.ExecutedFolder.restartRequired=false
# The generic container requires a restart for the NOOP action performed by this deployed. (inherited from: generic.AbstractDeployed.restartRequiredForNoop)
#generic.ExecutedFolder.restartRequiredForNoop=false
# Additional template classpath resources that should be uploaded to the working directory before executing the script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory.
#generic.ExecutedFolder.templateClasspathResources=null
# Additional classpath resources that should be uploaded to the working directory before executing the script.
#generic.ExecutedScript.classpathResources=null
# Options for the create step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.AbstractDeployed.createOptions)
#generic.ExecutedScript.createOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the create operation. (inherited from: generic.AbstractDeployed.createOrder)
#generic.ExecutedScript.createOrder=50
# Classpath to the script that is uploaded and executed on the generic container for the create operation.
#generic.ExecutedScript.createScript=null
# Create Verb (inherited from: generic.AbstractDeployed.createVerb)
#generic.ExecutedScript.createVerb=Create
# Options for the destroy step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.AbstractDeployed.destroyOptions)
#generic.ExecutedScript.destroyOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the destroy operation. (inherited from: generic.AbstractDeployed.destroyOrder)
#generic.ExecutedScript.destroyOrder=40
# Classpath to the script that is uploaded and executed on the generic container for the destroy operation.
#generic.ExecutedScript.destroyScript=null
# Destroy Verb (inherited from: generic.AbstractDeployed.destroyVerb)
#generic.ExecutedScript.destroyVerb=Destroy
# Additional classpath resources that should be uploaded to the working directory before executing the inspect script. (inherited from: generic.AbstractDeployed.inspectClasspathResources)
#generic.ExecutedScript.inspectClasspathResources=null
# Classpath to the script used to inspect the generic container. (inherited from: generic.AbstractDeployed.inspectScript)
#generic.ExecutedScript.inspectScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the inspect script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.AbstractDeployed.inspectTemplateClasspathResources)
#generic.ExecutedScript.inspectTemplateClasspathResources=null
# Options for the modify step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.AbstractDeployed.modifyOptions)
#generic.ExecutedScript.modifyOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the modify operation. (inherited from: generic.AbstractDeployed.modifyOrder)
#generic.ExecutedScript.modifyOrder=50
# Classpath to the script that is uploaded and executed on the generic container for the modify operation.
#generic.ExecutedScript.modifyScript=null
# Modify Verb (inherited from: generic.AbstractDeployed.modifyVerb)
#generic.ExecutedScript.modifyVerb=Modify
# Options for the noop step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.AbstractDeployed.noopOptions)
#generic.ExecutedScript.noopOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the noop operation. (inherited from: generic.AbstractDeployed.noopOrder)
#generic.ExecutedScript.noopOrder=50
# Classpath to the script that is uploaded and executed on the generic container for the noop operation.
#generic.ExecutedScript.noopScript=null
# Noop Verb (inherited from: generic.AbstractDeployed.noopVerb)
#generic.ExecutedScript.noopVerb=Modify
# Name of working directory on target host. Default is to create a temporary directory which is deleted when connection is closed.
#generic.ExecutedScript.remoteWorkingDirectoryPath=null
# The generic container requires a restart for the action performed by this deployed. (inherited from: generic.AbstractDeployed.restartRequired)
#generic.ExecutedScript.restartRequired=false
# The generic container requires a restart for the NOOP action performed by this deployed. (inherited from: generic.AbstractDeployed.restartRequiredForNoop)
#generic.ExecutedScript.restartRequiredForNoop=false
# Retain the specified working directory on target host after completion.
#generic.ExecutedScript.retainRemoteWorkingDirectory=false
# Additional template classpath resources that should be uploaded to the working directory before executing the script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory.
#generic.ExecutedScript.templateClasspathResources=null
# Additional classpath resources that should be uploaded to the working directory before executing the script. (inherited from: generic.ExecutedScript.classpathResources)
#generic.ExecutedScriptWithDerivedArtifact.classpathResources=null
# Options for the create step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.ExecutedScript.createOptions)
#generic.ExecutedScriptWithDerivedArtifact.createOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the create operation. (inherited from: generic.ExecutedScript.createOrder)
#generic.ExecutedScriptWithDerivedArtifact.createOrder=50
# Classpath to the script that is uploaded and executed on the generic container for the create operation. (inherited from: generic.ExecutedScript.createScript)
#generic.ExecutedScriptWithDerivedArtifact.createScript=null
# Create Verb (inherited from: generic.ExecutedScript.createVerb)
#generic.ExecutedScriptWithDerivedArtifact.createVerb=Create
# Options for the destroy step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.ExecutedScript.destroyOptions)
#generic.ExecutedScriptWithDerivedArtifact.destroyOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the destroy operation. (inherited from: generic.ExecutedScript.destroyOrder)
#generic.ExecutedScriptWithDerivedArtifact.destroyOrder=40
# Classpath to the script that is uploaded and executed on the generic container for the destroy operation. (inherited from: generic.ExecutedScript.destroyScript)
#generic.ExecutedScriptWithDerivedArtifact.destroyScript=null
# Destroy Verb (inherited from: generic.ExecutedScript.destroyVerb)
#generic.ExecutedScriptWithDerivedArtifact.destroyVerb=Destroy
# Additional classpath resources that should be uploaded to the working directory before executing the inspect script. (inherited from: generic.ExecutedScript.inspectClasspathResources)
#generic.ExecutedScriptWithDerivedArtifact.inspectClasspathResources=null
# Classpath to the script used to inspect the generic container. (inherited from: generic.ExecutedScript.inspectScript)
#generic.ExecutedScriptWithDerivedArtifact.inspectScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the inspect script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.ExecutedScript.inspectTemplateClasspathResources)
#generic.ExecutedScriptWithDerivedArtifact.inspectTemplateClasspathResources=null
# Options for the modify step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.ExecutedScript.modifyOptions)
#generic.ExecutedScriptWithDerivedArtifact.modifyOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the modify operation. (inherited from: generic.ExecutedScript.modifyOrder)
#generic.ExecutedScriptWithDerivedArtifact.modifyOrder=50
# Classpath to the script that is uploaded and executed on the generic container for the modify operation. (inherited from: generic.ExecutedScript.modifyScript)
#generic.ExecutedScriptWithDerivedArtifact.modifyScript=null
# Modify Verb (inherited from: generic.ExecutedScript.modifyVerb)
#generic.ExecutedScriptWithDerivedArtifact.modifyVerb=Modify
# Options for the noop step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.ExecutedScript.noopOptions)
#generic.ExecutedScriptWithDerivedArtifact.noopOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the noop operation. (inherited from: generic.ExecutedScript.noopOrder)
#generic.ExecutedScriptWithDerivedArtifact.noopOrder=50
# Classpath to the script that is uploaded and executed on the generic container for the noop operation. (inherited from: generic.ExecutedScript.noopScript)
#generic.ExecutedScriptWithDerivedArtifact.noopScript=null
# Noop Verb (inherited from: generic.ExecutedScript.noopVerb)
#generic.ExecutedScriptWithDerivedArtifact.noopVerb=Modify
# Name of working directory on target host. Default is to create a temporary directory which is deleted when connection is closed. (inherited from: generic.ExecutedScript.remoteWorkingDirectoryPath)
#generic.ExecutedScriptWithDerivedArtifact.remoteWorkingDirectoryPath=null
# The generic container requires a restart for the action performed by this deployed. (inherited from: generic.ExecutedScript.restartRequired)
#generic.ExecutedScriptWithDerivedArtifact.restartRequired=false
# The generic container requires a restart for the NOOP action performed by this deployed. (inherited from: generic.ExecutedScript.restartRequiredForNoop)
#generic.ExecutedScriptWithDerivedArtifact.restartRequiredForNoop=false
# Retain the specified working directory on target host after completion. (inherited from: generic.ExecutedScript.retainRemoteWorkingDirectory)
#generic.ExecutedScriptWithDerivedArtifact.retainRemoteWorkingDirectory=false
# Additional template classpath resources that should be uploaded to the working directory before executing the script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.ExecutedScript.templateClasspathResources)
#generic.ExecutedScriptWithDerivedArtifact.templateClasspathResources=null
# The delimiters used indicate placeholders, defaults to '{{ }}'. This is a 5 character string with a space in the middle, the first two are the leading delimiter, the last two are the closing delimiter (inherited from: udm.BaseDeployableFileArtifact.delimiters)
#generic.File.delimiters={{ }}
# A map that maps regular expressions matching the full path of file(s) in the artifact to character set encodings (inherited from: udm.BaseDeployableFileArtifact.fileEncodings)
#generic.File.fileEncodings=.+\.properties:ISO-8859-1
# Regular expression that matches file names of text files (inherited from: udm.BaseDeployableFileArtifact.textFileNamesRegex)
#generic.File.textFileNamesRegex=.+\.(cfg | conf | config | ini | properties | props | txt | asp | aspx | htm | html | jsf | jsp | xht | xhtml | sql | xml | xsd | xsl | xslt)
# The delimiters used indicate placeholders, defaults to '{{ }}'. This is a 5 character string with a space in the middle, the first two are the leading delimiter, the last two are the closing delimiter (inherited from: udm.BaseDeployableFolderArtifact.delimiters)
#generic.Folder.delimiters={{ }}
# A map that maps regular expressions matching the full path of file(s) in the artifact to character set encodings (inherited from: udm.BaseDeployableFolderArtifact.fileEncodings)
#generic.Folder.fileEncodings=.+\.properties:ISO-8859-1
# Regular expression that matches file names of text files (inherited from: udm.BaseDeployableFolderArtifact.textFileNamesRegex)
#generic.Folder.textFileNamesRegex=.+\.(cfg | conf | config | ini | properties | props | txt | asp | aspx | htm | html | jsf | jsp | xht | xhtml | sql | xml | xsd | xsl | xslt)
# Options for the create step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.AbstractDeployed.createOptions)
#generic.ManualProcess.createOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the create operation. (inherited from: generic.AbstractDeployed.createOrder)
#generic.ManualProcess.createOrder=50
# Classpath to the script that generates the instructions for the create operation.
#generic.ManualProcess.createScript=null
# Create Verb (inherited from: generic.AbstractDeployed.createVerb)
#generic.ManualProcess.createVerb=Create
# Options for the destroy step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.AbstractDeployed.destroyOptions)
#generic.ManualProcess.destroyOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the destroy operation. (inherited from: generic.AbstractDeployed.destroyOrder)
#generic.ManualProcess.destroyOrder=40
# Classpath to the script that generates the instructions for the destroy operation.
#generic.ManualProcess.destroyScript=null
# Destroy Verb (inherited from: generic.AbstractDeployed.destroyVerb)
#generic.ManualProcess.destroyVerb=Destroy
# Additional classpath resources that should be uploaded to the working directory before executing the inspect script. (inherited from: generic.AbstractDeployed.inspectClasspathResources)
#generic.ManualProcess.inspectClasspathResources=null
# Classpath to the script used to inspect the generic container. (inherited from: generic.AbstractDeployed.inspectScript)
#generic.ManualProcess.inspectScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the inspect script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.AbstractDeployed.inspectTemplateClasspathResources)
#generic.ManualProcess.inspectTemplateClasspathResources=null
# Options for the modify step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.AbstractDeployed.modifyOptions)
#generic.ManualProcess.modifyOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the modify operation. (inherited from: generic.AbstractDeployed.modifyOrder)
#generic.ManualProcess.modifyOrder=50
# Classpath to the script that generates the instructions for the modify operation.
#generic.ManualProcess.modifyScript=null
# Modify Verb (inherited from: generic.AbstractDeployed.modifyVerb)
#generic.ManualProcess.modifyVerb=Modify
# Options for the noop step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.AbstractDeployed.noopOptions)
#generic.ManualProcess.noopOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the noop operation. (inherited from: generic.AbstractDeployed.noopOrder)
#generic.ManualProcess.noopOrder=50
# Classpath to the script that generates the instructions for the noop operation.
#generic.ManualProcess.noopScript=null
# Noop Verb (inherited from: generic.AbstractDeployed.noopVerb)
#generic.ManualProcess.noopVerb=Modify
# The generic container requires a restart for the action performed by this deployed. (inherited from: generic.AbstractDeployed.restartRequired)
#generic.ManualProcess.restartRequired=false
# The generic container requires a restart for the NOOP action performed by this deployed. (inherited from: generic.AbstractDeployed.restartRequiredForNoop)
#generic.ManualProcess.restartRequiredForNoop=false
# Additional classpath resources that should be uploaded to the working directory before executing the inspect script. (inherited from: generic.BaseGenericContainer.inspectClasspathResources)
#generic.NestedContainer.inspectClasspathResources=null
# Classpath to the script used to inspect the generic container. (inherited from: generic.BaseGenericContainer.inspectScript)
#generic.NestedContainer.inspectScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the inspect script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.BaseGenericContainer.inspectTemplateClasspathResources)
#generic.NestedContainer.inspectTemplateClasspathResources=null
# Additional classpath resources that should be uploaded to the working directory before executing the restart script. (inherited from: generic.BaseGenericContainer.restartClasspathResources)
#generic.NestedContainer.restartClasspathResources=null
# The order of the restart container step in the step list. (inherited from: generic.BaseGenericContainer.restartOrder)
#generic.NestedContainer.restartOrder=90
# Classpath to the script used to restart the generic container. (inherited from: generic.BaseGenericContainer.restartScript)
#generic.NestedContainer.restartScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the restart script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.BaseGenericContainer.restartTemplateClasspathResources)
#generic.NestedContainer.restartTemplateClasspathResources=null
# The time to wait in seconds for a container restart action. (inherited from: generic.BaseGenericContainer.restartWaitTime)
#generic.NestedContainer.restartWaitTime=0
# Additional classpath resources that should be uploaded to the working directory before executing the start script. (inherited from: generic.BaseGenericContainer.startClasspathResources)
#generic.NestedContainer.startClasspathResources=null
# The order of the start container step in the step list. (inherited from: generic.BaseGenericContainer.startOrder)
#generic.NestedContainer.startOrder=90
# Classpath to the script used to start the generic container. (inherited from: generic.BaseGenericContainer.startScript)
#generic.NestedContainer.startScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the start script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.BaseGenericContainer.startTemplateClasspathResources)
#generic.NestedContainer.startTemplateClasspathResources=null
# The time to wait in seconds for a container start action. (inherited from: generic.BaseGenericContainer.startWaitTime)
#generic.NestedContainer.startWaitTime=0
# Additional classpath resources that should be uploaded to the working directory before executing the stop script. (inherited from: generic.BaseGenericContainer.stopClasspathResources)
#generic.NestedContainer.stopClasspathResources=null
# The order of the stop container step in the step list. (inherited from: generic.BaseGenericContainer.stopOrder)
#generic.NestedContainer.stopOrder=10
# Classpath to the script used to stop the generic container. (inherited from: generic.BaseGenericContainer.stopScript)
#generic.NestedContainer.stopScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the stop script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.BaseGenericContainer.stopTemplateClasspathResources)
#generic.NestedContainer.stopTemplateClasspathResources=null
# The time to wait in seconds for a container stop action. (inherited from: generic.BaseGenericContainer.stopWaitTime)
#generic.NestedContainer.stopWaitTime=0
# Options for the create step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.AbstractDeployedArtifact.createOptions)
#generic.ProcessedTemplate.createOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the create operation. (inherited from: generic.AbstractDeployedArtifact.createOrder)
#generic.ProcessedTemplate.createOrder=50
# Create the target directory on the generic server if it does not exist. (inherited from: generic.AbstractDeployedArtifact.createTargetDirectory)
#generic.ProcessedTemplate.createTargetDirectory=false
# Create Verb (inherited from: generic.AbstractDeployedArtifact.createVerb)
#generic.ProcessedTemplate.createVerb=Create
# Options for the destroy step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.AbstractDeployedArtifact.destroyOptions)
#generic.ProcessedTemplate.destroyOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the destroy operation. (inherited from: generic.AbstractDeployedArtifact.destroyOrder)
#generic.ProcessedTemplate.destroyOrder=40
# Destroy Verb (inherited from: generic.AbstractDeployedArtifact.destroyVerb)
#generic.ProcessedTemplate.destroyVerb=Destroy
# Additional classpath resources that should be uploaded to the working directory before executing the inspect script. (inherited from: generic.AbstractDeployedArtifact.inspectClasspathResources)
#generic.ProcessedTemplate.inspectClasspathResources=null
# Classpath to the script used to inspect the generic container. (inherited from: generic.AbstractDeployedArtifact.inspectScript)
#generic.ProcessedTemplate.inspectScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the inspect script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.AbstractDeployedArtifact.inspectTemplateClasspathResources)
#generic.ProcessedTemplate.inspectTemplateClasspathResources=null
# Options for the modify step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.AbstractDeployedArtifact.modifyOptions)
#generic.ProcessedTemplate.modifyOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the modify operation. (inherited from: generic.AbstractDeployedArtifact.modifyOrder)
#generic.ProcessedTemplate.modifyOrder=50
# Modify Verb (inherited from: generic.AbstractDeployedArtifact.modifyVerb)
#generic.ProcessedTemplate.modifyVerb=Modify
# Options for the noop step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.AbstractDeployedArtifact.noopOptions)
#generic.ProcessedTemplate.noopOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the noop operation. (inherited from: generic.AbstractDeployedArtifact.noopOrder)
#generic.ProcessedTemplate.noopOrder=50
# Noop Verb (inherited from: generic.AbstractDeployedArtifact.noopVerb)
#generic.ProcessedTemplate.noopVerb=Modify
# The generic container requires a restart for the action performed by this deployed. (inherited from: generic.AbstractDeployedArtifact.restartRequired)
#generic.ProcessedTemplate.restartRequired=false
# The generic container requires a restart for the NOOP action performed by this deployed. (inherited from: generic.AbstractDeployedArtifact.restartRequiredForNoop)
#generic.ProcessedTemplate.restartRequiredForNoop=false
# Path to which artifact must be copied to on the generic server. (inherited from: generic.AbstractDeployedArtifact.targetDirectory)
#generic.ProcessedTemplate.targetDirectory=null
# Is the target directory shared by others on the generic server. When true, the target directory is not deleted during a destroy operation; only the artifacts copied to it. (inherited from: generic.AbstractDeployedArtifact.targetDirectoryShared)
#generic.ProcessedTemplate.targetDirectoryShared=true
# Classpath to the freemarker template used to generate the content of the final text base artifact.
#generic.ProcessedTemplate.template=null
# Name of the application pool for this website.
#iis.Application.applicationPoolName=DefaultAppPool
# If set to true, multiple steps at the same order will be batched together in one batch to improve performance over high-latency WinRM connections (inherited from: iis.Resource.batchSteps)
#iis.Application.batchSteps=false
# Additional classpath resources that should be uploaded to the working directory before executing the script. (inherited from: iis.Resource.classpathResources)
#iis.Application.classpathResources=null
# Options for the create step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: iis.Resource.createOptions)
#iis.Application.createOptions=uploadArtifactData,uploadClasspathResources
# Order at which the create step will be executed. (inherited from: iis.Resource.createOrder)
#iis.Application.createOrder=60
# Create Script
#iis.Application.createScript=iis/create-or-modify-application.ps1
# Verb that is used to prefix the description for the create step. (inherited from: iis.Resource.createVerb)
#iis.Application.createVerb=Create
# Options for the destroy step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: iis.Resource.destroyOptions)
#iis.Application.destroyOptions=uploadClasspathResources
# Order at which the destroy step will be executed. (inherited from: iis.Resource.destroyOrder)
#iis.Application.destroyOrder=40
# Destroy Script
#iis.Application.destroyScript=iis/destroy-application.ps1
# Verb that is used to prefix the description for the destroy step. (inherited from: iis.Resource.destroyVerb)
#iis.Application.destroyVerb=Destroy
# Order at which the discover step will be executed. (inherited from: iis.Resource.discoverOrder)
#iis.Application.discoverOrder=50
# Discover Script
#iis.Application.discoverScript=iis/inspect-applications.ps1
# List of scripts to append to the the step script. (inherited from: iis.Resource.libraryScripts)
#iis.Application.libraryScripts=iis/library/resource.ps1
# Maximum number of steps in a batch. (inherited from: iis.Resource.maxBatchSize)
#iis.Application.maxBatchSize=100
# Modify Options
#iis.Application.modifyOptions=uploadArtifactData,exposePreviousDeployed
# Order at which the modify step will be executed. (inherited from: iis.Resource.modifyOrder)
#iis.Application.modifyOrder=60
# Modify Script
#iis.Application.modifyScript=iis/create-or-modify-application.ps1
# Verb that is used to prefix the description for the modify step. (inherited from: iis.Resource.modifyVerb)
#iis.Application.modifyVerb=Modify
# Options for the noop step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: iis.Resource.noopOptions)
#iis.Application.noopOptions=uploadClasspathResources
# Order at which the noop step will be executed. (inherited from: iis.Resource.noopOrder)
#iis.Application.noopOrder=50
# PowerShell script invoked to noop a resource or an artifact on Windows. (inherited from: iis.Resource.noopScript)
#iis.Application.noopScript=null
# Verb that is used to prefix the description for the noop step. (inherited from: iis.Resource.noopVerb)
#iis.Application.noopVerb=Noop
# Protocols supported by this application
#iis.Application.protocols=http
# Options for the start step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: iis.Resource.startOptions)
#iis.Application.startOptions=uploadClasspathResources
# Order at which the start step will be executed. (inherited from: iis.Resource.startOrder)
#iis.Application.startOrder=90
# PowerShell script invoked to start a resource of an artifact on Windows. (inherited from: iis.Resource.startScript)
#iis.Application.startScript=null
# Verb that is used to prefix the description for the start step. (inherited from: iis.Resource.startVerb)
#iis.Application.startVerb=Start
# Options for the stop step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: iis.Resource.stopOptions)
#iis.Application.stopOptions=uploadClasspathResources
# Order at which the stop script will be executed. (inherited from: iis.Resource.stopOrder)
#iis.Application.stopOrder=10
# PowerShell script invoked to stop a resource or an artifact on Windows. (inherited from: iis.Resource.stopScript)
#iis.Application.stopScript=null
# Verb that is used to prefix the description for the stop step. (inherited from: iis.Resource.stopVerb)
#iis.Application.stopVerb=Stop
# If set to true, multiple steps at the same order will be batched together in one batch to improve performance over high-latency WinRM connections (inherited from: powershell.ExtensiblePowerShellDeployed.batchSteps)
#iis.ApplicationPool.batchSteps=false
# Additional classpath resources that should be uploaded to the working directory before executing the script. (inherited from: powershell.ExtensiblePowerShellDeployed.classpathResources)
#iis.ApplicationPool.classpathResources=null
# Options for the create step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: powershell.ExtensiblePowerShellDeployed.createOptions)
#iis.ApplicationPool.createOptions=uploadArtifactData,uploadClasspathResources
# Create Order
#iis.ApplicationPool.createOrder=56
# Create Script
#iis.ApplicationPool.createScript=iis/create-or-modify-application-pool.ps1
# Verb that is used to prefix the description for the create step. (inherited from: powershell.ExtensiblePowerShellDeployed.createVerb)
#iis.ApplicationPool.createVerb=Create
# Options for the destroy step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: powershell.ExtensiblePowerShellDeployed.destroyOptions)
#iis.ApplicationPool.destroyOptions=uploadClasspathResources
# Destroy Order
#iis.ApplicationPool.destroyOrder=44
# Destroy Script
#iis.ApplicationPool.destroyScript=iis/destroy-application-pool.ps1
# Verb that is used to prefix the description for the destroy step. (inherited from: powershell.ExtensiblePowerShellDeployed.destroyVerb)
#iis.ApplicationPool.destroyVerb=Destroy
# Order at which the discover step will be executed. (inherited from: powershell.ExtensiblePowerShellDeployed.discoverOrder)
#iis.ApplicationPool.discoverOrder=50
# Discover Script
#iis.ApplicationPool.discoverScript=iis/inspect-application-pools.ps1
# When the Enable32BitAppOnWin64 property is set to true, a 32-bit application is allowed to run on a computer than has a 64-bit processor.
#iis.ApplicationPool.enable32BitAppOnWin64=false
# List of scripts to append to the the step script. (inherited from: powershell.ExtensiblePowerShellDeployed.libraryScripts)
#iis.ApplicationPool.libraryScripts=null
# The managed .NET runtime version to use. Default is 'v4.0'. Valid values are v1.0, v1.1, v2.0, or v4.0.
#iis.ApplicationPool.managedRuntimeVersion=v4.0
# Maximum number of steps in a batch. (inherited from: powershell.ExtensiblePowerShellDeployed.maxBatchSize)
#iis.ApplicationPool.maxBatchSize=100
# Modify Options
#iis.ApplicationPool.modifyOptions=uploadArtifactData,exposePreviousDeployed
# Modify Order
#iis.ApplicationPool.modifyOrder=56
# Modify Script
#iis.ApplicationPool.modifyScript=iis/create-or-modify-application-pool.ps1
# Verb that is used to prefix the description for the modify step. (inherited from: powershell.ExtensiblePowerShellDeployed.modifyVerb)
#iis.ApplicationPool.modifyVerb=Modify
# Options for the noop step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: powershell.ExtensiblePowerShellDeployed.noopOptions)
#iis.ApplicationPool.noopOptions=uploadClasspathResources
# Order at which the noop step will be executed. (inherited from: powershell.ExtensiblePowerShellDeployed.noopOrder)
#iis.ApplicationPool.noopOrder=50
# PowerShell script invoked to noop a resource or an artifact on Windows. (inherited from: powershell.ExtensiblePowerShellDeployed.noopScript)
#iis.ApplicationPool.noopScript=null
# Verb that is used to prefix the description for the noop step. (inherited from: powershell.ExtensiblePowerShellDeployed.noopVerb)
#iis.ApplicationPool.noopVerb=Noop
# Application pool can run as several built-in service accounts. Valid values are NetworkService, LocalService, LocalSystem, ApplicationPoolIdentity, SpecificUser.
#iis.ApplicationPool.serviceAccount=ApplicationPoolIdentity
# Specifies the number of seconds to pause for a new application pool to become responsive after creation.
#iis.ApplicationPool.sleepAfterCreate=2
# Options for the start step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: powershell.ExtensiblePowerShellDeployed.startOptions)
#iis.ApplicationPool.startOptions=uploadClasspathResources
# Start Order
#iis.ApplicationPool.startOrder=86
# Start Script
#iis.ApplicationPool.startScript=iis/start-application-pool.ps1
# Verb that is used to prefix the description for the start step. (inherited from: powershell.ExtensiblePowerShellDeployed.startVerb)
#iis.ApplicationPool.startVerb=Start
# Options for the stop step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: powershell.ExtensiblePowerShellDeployed.stopOptions)
#iis.ApplicationPool.stopOptions=uploadClasspathResources
# Stop Order
#iis.ApplicationPool.stopOrder=14
# Stop Script
#iis.ApplicationPool.stopScript=iis/stop-application-pool.ps1
# If set to true, this application pool is stopped and started when another component in the same package is deployed
#iis.ApplicationPool.stopStartOnNoop=true
# Verb that is used to prefix the description for the stop step. (inherited from: powershell.ExtensiblePowerShellDeployed.stopVerb)
#iis.ApplicationPool.stopVerb=Stop
# Allows any user to access any public content without providing a user name and password challenge to the client browser. By default, Anonymous authentication is enabled
#iis.Authentication.anonymousAuthentication_enabled=true
# The logonMethod attribute can be one of the following possible values: Interactive - 0, Batch - 1, Network - 2, ClearText - 3.
#iis.Authentication.anonymousAuthentication_logonMethod=ClearText
# Specifies the user identity type to authenticate anonymous users.
#iis.Authentication.anonymousAuthentication_userIdentity=SpecificUser
# Specifies the username for Anonymous authentication.
#iis.Authentication.anonymousAuthentication_userName=IUSR
# Use ASP.NET impersonation when you want to run your ASP.NET application under a security context different from the default security context for ASP.NET application.
#iis.Authentication.aspnetImpersonation_impersonate=false
# Specifies whether Basic authentication is enabled.
#iis.Authentication.basicAuthentication_enabled=false
# The logonMethod attribute can be one of the following possible values: Interactive - 0, Batch - 1, Network - 2, ClearText - 3.
#iis.Authentication.basicAuthentication_logonMethod=ClearText
# Specifies whether Client Certificate Mapping authentication using Active Directory is enabled. For this setting to take effect, you must set this attribute with IIS Manager. If you use any other method to set this attribute, you must restart the Web server for the setting to take effect.
#iis.Authentication.clientCertificateMappingAuthentication_enabled=false
# Specifies whether Digest authentication is enabled.
#iis.Authentication.digestAuthentication_enabled=false
# Defines whether cookies are used and their behavior.
#iis.Authentication.formsAuthentication_cookieless=UseDeviceProfile
# Defines the default URL that is used for redirection after authentication.
#iis.Authentication.formsAuthentication_defaultUrl=default.aspx
# Indicates whether authenticated users are redirected to URLs in other Web applications.
#iis.Authentication.formsAuthentication_enableCrossAppRedirects=false
# Specifies whether ASP.NET forms–based authentication is enabled.
#iis.Authentication.formsAuthentication_enabled=false
# Specifies the URL to which the request is redirected for logon, if no valid authentication cookie is found.
#iis.Authentication.formsAuthentication_loginUrl=login.aspx
# Specifies the HTTP cookie to use for authentication. If multiple applications are running on a single server and each application requires a unique cookie, you must configure the cookie name in each Web.config file for each application.
#iis.Authentication.formsAuthentication_name=.ASPXAUTH
# Specifies the path for cookies that are issued by the application.
#iis.Authentication.formsAuthentication_path=/
# Specifies the type of encryption, if any, to use for cookies.
#iis.Authentication.formsAuthentication_protection=All
# Specifies whether an SSL connection is required to transmit the authentication cookie.
#iis.Authentication.formsAuthentication_requireSSL=false
# Specifies whether sliding expiration is enabled. Sliding expiration resets the active authentication time for a cookie to expire upon each request during a single session.
#iis.Authentication.formsAuthentication_slidingExpiration=true
# Specifies the time after which the cookie expires. The time format is 'HH:MM:SS'. Default value is '00:30:00' (30 minutes).
#iis.Authentication.formsAuthentication_timeout=00:30:00
# Specifies whether IIS automatically reauthenticates every non-NTLM (for example, Kerberos) request, even those on the same connection. False enables multiple authentications for the same connections.
#iis.Authentication.windowsAuthentication_authPersistNonNTLM=true
# Setting this flag to true specifies that authentication persists only for a single request on a connection. IIS resets the authentication at the end of each request, and forces reauthentication on the next request of the session.
#iis.Authentication.windowsAuthentication_authPersistSingleRequest=false
# Specifies whether Windows authentication is enabled.
#iis.Authentication.windowsAuthentication_enabled=false
# Specifies whether Windows authentication is done in kernel mode. Kernel-mode authentication may improve authentication performance and prevent authentication problems with application pools that are configured to use a custom identity.
#iis.Authentication.windowsAuthentication_useKernelMode=true
# If set to true, multiple steps at the same order will be batched together in one batch to improve performance over high-latency WinRM connections (inherited from: powershell.ExtensiblePowerShellDeployedArtifact.batchSteps)
#iis.PublishedWebContent.batchSteps=false
# Additional classpath resources that should be uploaded to the working directory before executing the script. (inherited from: powershell.ExtensiblePowerShellDeployedArtifact.classpathResources)
#iis.PublishedWebContent.classpathResources=null
# Options for the create step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: powershell.ExtensiblePowerShellDeployedArtifact.createOptions)
#iis.PublishedWebContent.createOptions=uploadArtifactData,uploadClasspathResources
# Create Order
#iis.PublishedWebContent.createOrder=54
# Create Script
#iis.PublishedWebContent.createScript=iis/deploy-webcontent.ps1
# Create Verb
#iis.PublishedWebContent.createVerb=Copy
# Options for the destroy step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: powershell.ExtensiblePowerShellDeployedArtifact.destroyOptions)
#iis.PublishedWebContent.destroyOptions=uploadClasspathResources
# Destroy Order
#iis.PublishedWebContent.destroyOrder=46
# Destroy Script
#iis.PublishedWebContent.destroyScript=iis/undeploy-webcontent.ps1
# Destroy Verb
#iis.PublishedWebContent.destroyVerb=Remove
# Order at which the discover step will be executed. (inherited from: powershell.ExtensiblePowerShellDeployedArtifact.discoverOrder)
#iis.PublishedWebContent.discoverOrder=50
# Script invoked to discover and inspect deployeds of this type. (inherited from: powershell.ExtensiblePowerShellDeployedArtifact.discoverScript)
#iis.PublishedWebContent.discoverScript=null
# List of scripts to append to the the step script. (inherited from: powershell.ExtensiblePowerShellDeployedArtifact.libraryScripts)
#iis.PublishedWebContent.libraryScripts=null
# Maximum number of steps in a batch. (inherited from: powershell.ExtensiblePowerShellDeployedArtifact.maxBatchSize)
#iis.PublishedWebContent.maxBatchSize=100
# Options for the modify step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: powershell.ExtensiblePowerShellDeployedArtifact.modifyOptions)
#iis.PublishedWebContent.modifyOptions=uploadArtifactData,uploadClasspathResources
# Modify Order
#iis.PublishedWebContent.modifyOrder=54
# Modify Script
#iis.PublishedWebContent.modifyScript=iis/deploy-webcontent.ps1
# Modify Verb
#iis.PublishedWebContent.modifyVerb=Copy
# Options for the noop step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: powershell.ExtensiblePowerShellDeployedArtifact.noopOptions)
#iis.PublishedWebContent.noopOptions=uploadClasspathResources
# Order at which the noop step will be executed. (inherited from: powershell.ExtensiblePowerShellDeployedArtifact.noopOrder)
#iis.PublishedWebContent.noopOrder=50
# PowerShell script invoked to noop a resource or an artifact on Windows. (inherited from: powershell.ExtensiblePowerShellDeployedArtifact.noopScript)
#iis.PublishedWebContent.noopScript=null
# Verb that is used to prefix the description for the noop step. (inherited from: powershell.ExtensiblePowerShellDeployedArtifact.noopVerb)
#iis.PublishedWebContent.noopVerb=Noop
# Options for the start step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: powershell.ExtensiblePowerShellDeployedArtifact.startOptions)
#iis.PublishedWebContent.startOptions=uploadClasspathResources
# Order at which the start step will be executed. (inherited from: powershell.ExtensiblePowerShellDeployedArtifact.startOrder)
#iis.PublishedWebContent.startOrder=90
# PowerShell script invoked to start a resource of an artifact on Windows. (inherited from: powershell.ExtensiblePowerShellDeployedArtifact.startScript)
#iis.PublishedWebContent.startScript=null
# Verb that is used to prefix the description for the start step. (inherited from: powershell.ExtensiblePowerShellDeployedArtifact.startVerb)
#iis.PublishedWebContent.startVerb=Start
# Options for the stop step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: powershell.ExtensiblePowerShellDeployedArtifact.stopOptions)
#iis.PublishedWebContent.stopOptions=uploadClasspathResources
# Order at which the stop script will be executed. (inherited from: powershell.ExtensiblePowerShellDeployedArtifact.stopOrder)
#iis.PublishedWebContent.stopOrder=10
# PowerShell script invoked to stop a resource or an artifact on Windows. (inherited from: powershell.ExtensiblePowerShellDeployedArtifact.stopScript)
#iis.PublishedWebContent.stopScript=null
# Verb that is used to prefix the description for the stop step. (inherited from: powershell.ExtensiblePowerShellDeployedArtifact.stopVerb)
#iis.PublishedWebContent.stopVerb=Stop
# If set to true, multiple steps at the same order will be batched together in one batch to improve performance over high-latency WinRM connections (inherited from: powershell.ExtensiblePowerShellDeployed.batchSteps)
#iis.Resource.batchSteps=false
# Additional classpath resources that should be uploaded to the working directory before executing the script. (inherited from: powershell.ExtensiblePowerShellDeployed.classpathResources)
#iis.Resource.classpathResources=null
# Options for the create step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: powershell.ExtensiblePowerShellDeployed.createOptions)
#iis.Resource.createOptions=uploadArtifactData,uploadClasspathResources
# Order at which the create step will be executed. (inherited from: powershell.ExtensiblePowerShellDeployed.createOrder)
#iis.Resource.createOrder=60
# PowerShell script invoked to create a resource (or deploy an artifact) on Windows. (inherited from: powershell.ExtensiblePowerShellDeployed.createScript)
#iis.Resource.createScript=null
# Verb that is used to prefix the description for the create step. (inherited from: powershell.ExtensiblePowerShellDeployed.createVerb)
#iis.Resource.createVerb=Create
# Options for the destroy step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: powershell.ExtensiblePowerShellDeployed.destroyOptions)
#iis.Resource.destroyOptions=uploadClasspathResources
# Order at which the destroy step will be executed. (inherited from: powershell.ExtensiblePowerShellDeployed.destroyOrder)
#iis.Resource.destroyOrder=40
# PowerShell script invoked to destroy a resource (or undeploy an artifact) on Windows. (inherited from: powershell.ExtensiblePowerShellDeployed.destroyScript)
#iis.Resource.destroyScript=null
# Verb that is used to prefix the description for the destroy step. (inherited from: powershell.ExtensiblePowerShellDeployed.destroyVerb)
#iis.Resource.destroyVerb=Destroy
# Specifies whether directory browsing is enabled (true) or disabled (false) on the Web server.
#iis.Resource.directoryBrowse_enabled=false
# The showFlags attribute can have one or more of the following possible values. If you specify more than one value, separate the values with a comma (,). The default values are Date, Time, Size, Extension. None specifies that only the file or directory names are returned in a directory listing.
#iis.Resource.directoryBrowse_showFlags=Date,Time,Size,Extension
# Order at which the discover step will be executed. (inherited from: powershell.ExtensiblePowerShellDeployed.discoverOrder)
#iis.Resource.discoverOrder=50
# Script invoked to discover and inspect deployeds of this type. (inherited from: powershell.ExtensiblePowerShellDeployed.discoverScript)
#iis.Resource.discoverScript=null
# Library Scripts
#iis.Resource.libraryScripts=iis/library/resource.ps1
# Maximum number of steps in a batch. (inherited from: powershell.ExtensiblePowerShellDeployed.maxBatchSize)
#iis.Resource.maxBatchSize=100
# Options for the modify step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: powershell.ExtensiblePowerShellDeployed.modifyOptions)
#iis.Resource.modifyOptions=uploadArtifactData,uploadClasspathResources
# Order at which the modify step will be executed. (inherited from: powershell.ExtensiblePowerShellDeployed.modifyOrder)
#iis.Resource.modifyOrder=60
# PowerShell script invoked to modify a resource (or an artifact) on Windows. (inherited from: powershell.ExtensiblePowerShellDeployed.modifyScript)
#iis.Resource.modifyScript=null
# Verb that is used to prefix the description for the modify step. (inherited from: powershell.ExtensiblePowerShellDeployed.modifyVerb)
#iis.Resource.modifyVerb=Modify
# Options for the noop step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: powershell.ExtensiblePowerShellDeployed.noopOptions)
#iis.Resource.noopOptions=uploadClasspathResources
# Order at which the noop step will be executed. (inherited from: powershell.ExtensiblePowerShellDeployed.noopOrder)
#iis.Resource.noopOrder=50
# PowerShell script invoked to noop a resource or an artifact on Windows. (inherited from: powershell.ExtensiblePowerShellDeployed.noopScript)
#iis.Resource.noopScript=null
# Verb that is used to prefix the description for the noop step. (inherited from: powershell.ExtensiblePowerShellDeployed.noopVerb)
#iis.Resource.noopVerb=Noop
# Options for the start step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: powershell.ExtensiblePowerShellDeployed.startOptions)
#iis.Resource.startOptions=uploadClasspathResources
# Order at which the start step will be executed. (inherited from: powershell.ExtensiblePowerShellDeployed.startOrder)
#iis.Resource.startOrder=90
# PowerShell script invoked to start a resource of an artifact on Windows. (inherited from: powershell.ExtensiblePowerShellDeployed.startScript)
#iis.Resource.startScript=null
# Verb that is used to prefix the description for the start step. (inherited from: powershell.ExtensiblePowerShellDeployed.startVerb)
#iis.Resource.startVerb=Start
# Options for the stop step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: powershell.ExtensiblePowerShellDeployed.stopOptions)
#iis.Resource.stopOptions=uploadClasspathResources
# Order at which the stop script will be executed. (inherited from: powershell.ExtensiblePowerShellDeployed.stopOrder)
#iis.Resource.stopOrder=10
# PowerShell script invoked to stop a resource or an artifact on Windows. (inherited from: powershell.ExtensiblePowerShellDeployed.stopScript)
#iis.Resource.stopScript=null
# Verb that is used to prefix the description for the stop step. (inherited from: powershell.ExtensiblePowerShellDeployed.stopVerb)
#iis.Resource.stopVerb=Stop
# Deployeds To Discover (inherited from: powershell.BasePowerShellContainer.deployedsToDiscover)
#iis.Server.deployedsToDiscover=null
# Order at which the discover step will be executed. (inherited from: powershell.BasePowerShellContainer.discoverOrder)
#iis.Server.discoverOrder=0
# Script invoked to inspect this container and discover deployeds on it. (inherited from: powershell.BasePowerShellContainer.discoverScript)
#iis.Server.discoverScript=null
# Library Scripts
#iis.Server.libraryScripts=iis/runtime/assert.ps1,iis/runtime/load-webadministration.ps1
# Power Shell Path (inherited from: powershell.BasePowerShellContainer.powerShellPath)
#iis.Server.powerShellPath=powershell
# If set to true, multiple steps at the same order will be batched together in one batch to improve performance over high-latency WinRM connections (inherited from: iis.Resource.batchSteps)
#iis.VirtualDirectory.batchSteps=false
# Additional classpath resources that should be uploaded to the working directory before executing the script. (inherited from: iis.Resource.classpathResources)
#iis.VirtualDirectory.classpathResources=null
# Options for the create step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: iis.Resource.createOptions)
#iis.VirtualDirectory.createOptions=uploadArtifactData,uploadClasspathResources
# Order at which the create step will be executed. (inherited from: iis.Resource.createOrder)
#iis.VirtualDirectory.createOrder=60
# Create Script
#iis.VirtualDirectory.createScript=iis/create-or-modify-virtual-directory.ps1
# Verb that is used to prefix the description for the create step. (inherited from: iis.Resource.createVerb)
#iis.VirtualDirectory.createVerb=Create
# Options for the destroy step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: iis.Resource.destroyOptions)
#iis.VirtualDirectory.destroyOptions=uploadClasspathResources
# Order at which the destroy step will be executed. (inherited from: iis.Resource.destroyOrder)
#iis.VirtualDirectory.destroyOrder=40
# Destroy Script
#iis.VirtualDirectory.destroyScript=iis/destroy-virtual-directory.ps1
# Verb that is used to prefix the description for the destroy step. (inherited from: iis.Resource.destroyVerb)
#iis.VirtualDirectory.destroyVerb=Destroy
# Order at which the discover step will be executed. (inherited from: iis.Resource.discoverOrder)
#iis.VirtualDirectory.discoverOrder=50
# Discover Script
#iis.VirtualDirectory.discoverScript=iis/inspect-virtual-directories.ps1
# List of scripts to append to the the step script. (inherited from: iis.Resource.libraryScripts)
#iis.VirtualDirectory.libraryScripts=iis/library/resource.ps1
# Maximum number of steps in a batch. (inherited from: iis.Resource.maxBatchSize)
#iis.VirtualDirectory.maxBatchSize=100
# Modify Options
#iis.VirtualDirectory.modifyOptions=uploadArtifactData,exposePreviousDeployed
# Order at which the modify step will be executed. (inherited from: iis.Resource.modifyOrder)
#iis.VirtualDirectory.modifyOrder=60
# Modify Script
#iis.VirtualDirectory.modifyScript=iis/create-or-modify-virtual-directory.ps1
# Verb that is used to prefix the description for the modify step. (inherited from: iis.Resource.modifyVerb)
#iis.VirtualDirectory.modifyVerb=Modify
# Options for the noop step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: iis.Resource.noopOptions)
#iis.VirtualDirectory.noopOptions=uploadClasspathResources
# Order at which the noop step will be executed. (inherited from: iis.Resource.noopOrder)
#iis.VirtualDirectory.noopOrder=50
# PowerShell script invoked to noop a resource or an artifact on Windows. (inherited from: iis.Resource.noopScript)
#iis.VirtualDirectory.noopScript=null
# Verb that is used to prefix the description for the noop step. (inherited from: iis.Resource.noopVerb)
#iis.VirtualDirectory.noopVerb=Noop
# Options for the start step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: iis.Resource.startOptions)
#iis.VirtualDirectory.startOptions=uploadClasspathResources
# Order at which the start step will be executed. (inherited from: iis.Resource.startOrder)
#iis.VirtualDirectory.startOrder=90
# PowerShell script invoked to start a resource of an artifact on Windows. (inherited from: iis.Resource.startScript)
#iis.VirtualDirectory.startScript=null
# Verb that is used to prefix the description for the start step. (inherited from: iis.Resource.startVerb)
#iis.VirtualDirectory.startVerb=Start
# Options for the stop step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: iis.Resource.stopOptions)
#iis.VirtualDirectory.stopOptions=uploadClasspathResources
# Order at which the stop script will be executed. (inherited from: iis.Resource.stopOrder)
#iis.VirtualDirectory.stopOrder=10
# PowerShell script invoked to stop a resource or an artifact on Windows. (inherited from: iis.Resource.stopScript)
#iis.VirtualDirectory.stopScript=null
# Verb that is used to prefix the description for the stop step. (inherited from: iis.Resource.stopVerb)
#iis.VirtualDirectory.stopVerb=Stop
# The delimiters used indicate placeholders, defaults to '{{ }}'. This is a 5 character string with a space in the middle, the first two are the leading delimiter, the last two are the closing delimiter (inherited from: powershell.BasePowerShellDeployableFolderArtifact.delimiters)
#iis.WebContent.delimiters={{ }}
# A map that maps regular expressions matching the full path of file(s) in the artifact to character set encodings (inherited from: powershell.BasePowerShellDeployableFolderArtifact.fileEncodings)
#iis.WebContent.fileEncodings=.+\.properties:ISO-8859-1
# Regular expression that matches file names of text files (inherited from: powershell.BasePowerShellDeployableFolderArtifact.textFileNamesRegex)
#iis.WebContent.textFileNamesRegex=.+\.(cfg | conf | config | ini | properties | props | txt | asp | aspx | htm | html | jsf | jsp | xht | xhtml | sql | xml | xsd | xsl | xslt)
# Name of the application pool for this website.
#iis.Website.applicationPoolName=DefaultAppPool
# If set to true, multiple steps at the same order will be batched together in one batch to improve performance over high-latency WinRM connections (inherited from: iis.Resource.batchSteps)
#iis.Website.batchSteps=false
# Additional classpath resources that should be uploaded to the working directory before executing the script. (inherited from: iis.Resource.classpathResources)
#iis.Website.classpathResources=null
# Options for the create step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: iis.Resource.createOptions)
#iis.Website.createOptions=uploadArtifactData,uploadClasspathResources
# Create Order
#iis.Website.createOrder=58
# Create Script
#iis.Website.createScript=iis/create-or-modify-website.ps1
# Verb that is used to prefix the description for the create step. (inherited from: iis.Resource.createVerb)
#iis.Website.createVerb=Create
# Options for the destroy step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: iis.Resource.destroyOptions)
#iis.Website.destroyOptions=uploadClasspathResources
# Destroy Order
#iis.Website.destroyOrder=42
# Destroy Script
#iis.Website.destroyScript=iis/destroy-website.ps1
# Verb that is used to prefix the description for the destroy step. (inherited from: iis.Resource.destroyVerb)
#iis.Website.destroyVerb=Destroy
# Order at which the discover step will be executed. (inherited from: iis.Resource.discoverOrder)
#iis.Website.discoverOrder=50
# Discover Script
#iis.Website.discoverScript=iis/inspect-websites.ps1
# List of scripts to append to the the step script. (inherited from: iis.Resource.libraryScripts)
#iis.Website.libraryScripts=iis/library/resource.ps1
# Maximum number of steps in a batch. (inherited from: iis.Resource.maxBatchSize)
#iis.Website.maxBatchSize=100
# Modify Options
#iis.Website.modifyOptions=uploadArtifactData,exposePreviousDeployed
# Modify Order
#iis.Website.modifyOrder=58
# Modify Script
#iis.Website.modifyScript=iis/create-or-modify-website.ps1
# Verb that is used to prefix the description for the modify step. (inherited from: iis.Resource.modifyVerb)
#iis.Website.modifyVerb=Modify
# Options for the noop step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: iis.Resource.noopOptions)
#iis.Website.noopOptions=uploadClasspathResources
# Order at which the noop step will be executed. (inherited from: iis.Resource.noopOrder)
#iis.Website.noopOrder=50
# PowerShell script invoked to noop a resource or an artifact on Windows. (inherited from: iis.Resource.noopScript)
#iis.Website.noopScript=null
# Verb that is used to prefix the description for the noop step. (inherited from: iis.Resource.noopVerb)
#iis.Website.noopVerb=Noop
# Options for the start step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: iis.Resource.startOptions)
#iis.Website.startOptions=uploadClasspathResources
# Order at which the start step will be executed. (inherited from: iis.Resource.startOrder)
#iis.Website.startOrder=90
# Start Script
#iis.Website.startScript=iis/start-website.ps1
# Verb that is used to prefix the description for the start step. (inherited from: iis.Resource.startVerb)
#iis.Website.startVerb=Start
# Options for the stop step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: iis.Resource.stopOptions)
#iis.Website.stopOptions=uploadClasspathResources
# Order at which the stop script will be executed. (inherited from: iis.Resource.stopOrder)
#iis.Website.stopOrder=10
# Stop Script
#iis.Website.stopScript=iis/stop-website.ps1
# If set to true, this website is stopped and started when another component in the same package is deployed
#iis.Website.stopStartOnNoop=true
# Verb that is used to prefix the description for the stop step. (inherited from: iis.Resource.stopVerb)
#iis.Website.stopVerb=Stop
# IP address
#iis.WebsiteBinding.ipAddress=*
# Port
#iis.WebsiteBinding.port=80
# Protocol
#iis.WebsiteBinding.protocol=http
# If set to true, multiple steps at the same order will be batched together in one batch to improve performance over high-latency WinRM connections (inherited from: iis.Application.batchSteps)
#iis6.Application.batchSteps=false
# Additional classpath resources that should be uploaded to the working directory before executing the script. (inherited from: iis.Application.classpathResources)
#iis6.Application.classpathResources=null
# Options for the create step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: iis.Application.createOptions)
#iis6.Application.createOptions=uploadArtifactData,uploadClasspathResources
# Order at which the create step will be executed. (inherited from: iis.Application.createOrder)
#iis6.Application.createOrder=60
# Create Script
#iis6.Application.createScript=iis6/create-or-modify-application.ps1
# Verb that is used to prefix the description for the create step. (inherited from: iis.Application.createVerb)
#iis6.Application.createVerb=Create
# Options for the destroy step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: iis.Application.destroyOptions)
#iis6.Application.destroyOptions=uploadClasspathResources
# Order at which the destroy step will be executed. (inherited from: iis.Application.destroyOrder)
#iis6.Application.destroyOrder=40
# Destroy Script
#iis6.Application.destroyScript=iis6/destroy-application.ps1
# Verb that is used to prefix the description for the destroy step. (inherited from: iis.Application.destroyVerb)
#iis6.Application.destroyVerb=Destroy
# Not applicable for IIS6
#iis6.Application.directoryBrowse_enabled=false
# Not applicable for IIS6
#iis6.Application.directoryBrowse_showFlags=NOTUSED
# Order at which the discover step will be executed. (inherited from: iis.Application.discoverOrder)
#iis6.Application.discoverOrder=50
# Discover Script
#iis6.Application.discoverScript=iis6/inspect-applications.ps1
# List of scripts to append to the the step script. (inherited from: iis.Application.libraryScripts)
#iis6.Application.libraryScripts=iis/library/resource.ps1
# Maximum number of steps in a batch. (inherited from: iis.Application.maxBatchSize)
#iis6.Application.maxBatchSize=100
# Options for the modify step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: iis.Application.modifyOptions)
#iis6.Application.modifyOptions=uploadArtifactData,exposePreviousDeployed
# Order at which the modify step will be executed. (inherited from: iis.Application.modifyOrder)
#iis6.Application.modifyOrder=60
# Modify Script
#iis6.Application.modifyScript=iis6/create-or-modify-application.ps1
# Verb that is used to prefix the description for the modify step. (inherited from: iis.Application.modifyVerb)
#iis6.Application.modifyVerb=Modify
# Options for the noop step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: iis.Application.noopOptions)
#iis6.Application.noopOptions=uploadClasspathResources
# Order at which the noop step will be executed. (inherited from: iis.Application.noopOrder)
#iis6.Application.noopOrder=50
# PowerShell script invoked to noop a resource or an artifact on Windows. (inherited from: iis.Application.noopScript)
#iis6.Application.noopScript=null
# Verb that is used to prefix the description for the noop step. (inherited from: iis.Application.noopVerb)
#iis6.Application.noopVerb=Noop
# Not applicable for IIS6
#iis6.Application.protocols=UNUSED
# Options for the start step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: iis.Application.startOptions)
#iis6.Application.startOptions=uploadClasspathResources
# Order at which the start step will be executed. (inherited from: iis.Application.startOrder)
#iis6.Application.startOrder=90
# PowerShell script invoked to start a resource of an artifact on Windows. (inherited from: iis.Application.startScript)
#iis6.Application.startScript=null
# Verb that is used to prefix the description for the start step. (inherited from: iis.Application.startVerb)
#iis6.Application.startVerb=Start
# Options for the stop step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: iis.Application.stopOptions)
#iis6.Application.stopOptions=uploadClasspathResources
# Order at which the stop script will be executed. (inherited from: iis.Application.stopOrder)
#iis6.Application.stopOrder=10
# PowerShell script invoked to stop a resource or an artifact on Windows. (inherited from: iis.Application.stopScript)
#iis6.Application.stopScript=null
# Verb that is used to prefix the description for the stop step. (inherited from: iis.Application.stopVerb)
#iis6.Application.stopVerb=Stop
# If set to true, multiple steps at the same order will be batched together in one batch to improve performance over high-latency WinRM connections (inherited from: iis.ApplicationPool.batchSteps)
#iis6.ApplicationPool.batchSteps=false
# Additional classpath resources that should be uploaded to the working directory before executing the script. (inherited from: iis.ApplicationPool.classpathResources)
#iis6.ApplicationPool.classpathResources=null
# Options for the create step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: iis.ApplicationPool.createOptions)
#iis6.ApplicationPool.createOptions=uploadArtifactData,uploadClasspathResources
# Order at which the create step will be executed. (inherited from: iis.ApplicationPool.createOrder)
#iis6.ApplicationPool.createOrder=56
# Create Script
#iis6.ApplicationPool.createScript=iis6/create-or-modify-application-pool.ps1
# Verb that is used to prefix the description for the create step. (inherited from: iis.ApplicationPool.createVerb)
#iis6.ApplicationPool.createVerb=Create
# Options for the destroy step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: iis.ApplicationPool.destroyOptions)
#iis6.ApplicationPool.destroyOptions=uploadClasspathResources
# Order at which the destroy step will be executed. (inherited from: iis.ApplicationPool.destroyOrder)
#iis6.ApplicationPool.destroyOrder=44
# Destroy Script
#iis6.ApplicationPool.destroyScript=iis6/destroy-application-pool.ps1
# Verb that is used to prefix the description for the destroy step. (inherited from: iis.ApplicationPool.destroyVerb)
#iis6.ApplicationPool.destroyVerb=Destroy
# Order at which the discover step will be executed. (inherited from: iis.ApplicationPool.discoverOrder)
#iis6.ApplicationPool.discoverOrder=50
# Discover Script
#iis6.ApplicationPool.discoverScript=iis6/inspect-application-pools.ps1
# When the Enable32BitAppOnWin64 property is set to true, a 32-bit application is allowed to run on a computer than has a 64-bit processor. WARN: Setting Enable32BitAppOnWin64 to true for IIS 6 means that all worker processes (all application pools) are running as 32 bit processes. When enabled, change of the .NET framework version to 32-bit is required.
#iis6.ApplicationPool.enable32BitAppOnWin64=false
# List of scripts to append to the the step script. (inherited from: iis.ApplicationPool.libraryScripts)
#iis6.ApplicationPool.libraryScripts=null
# Not applicable for IIS6
#iis6.ApplicationPool.managedRuntimeVersion=UNUSED
# Maximum number of steps in a batch. (inherited from: iis.ApplicationPool.maxBatchSize)
#iis6.ApplicationPool.maxBatchSize=100
# Options for the modify step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: iis.ApplicationPool.modifyOptions)
#iis6.ApplicationPool.modifyOptions=uploadArtifactData,exposePreviousDeployed
# Order at which the modify step will be executed. (inherited from: iis.ApplicationPool.modifyOrder)
#iis6.ApplicationPool.modifyOrder=56
# Modify Script
#iis6.ApplicationPool.modifyScript=iis6/create-or-modify-application-pool.ps1
# Verb that is used to prefix the description for the modify step. (inherited from: iis.ApplicationPool.modifyVerb)
#iis6.ApplicationPool.modifyVerb=Modify
# Options for the noop step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: iis.ApplicationPool.noopOptions)
#iis6.ApplicationPool.noopOptions=uploadClasspathResources
# Order at which the noop step will be executed. (inherited from: iis.ApplicationPool.noopOrder)
#iis6.ApplicationPool.noopOrder=50
# PowerShell script invoked to noop a resource or an artifact on Windows. (inherited from: iis.ApplicationPool.noopScript)
#iis6.ApplicationPool.noopScript=null
# Verb that is used to prefix the description for the noop step. (inherited from: iis.ApplicationPool.noopVerb)
#iis6.ApplicationPool.noopVerb=Noop
# Application pool can run as several built-in service accounts. Valid values are NetworkService, LocalService, LocalSystem, SpecificUser.
#iis6.ApplicationPool.serviceAccount=NetworkService
# Options for the start step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: iis.ApplicationPool.startOptions)
#iis6.ApplicationPool.startOptions=uploadClasspathResources
# Order at which the start step will be executed. (inherited from: iis.ApplicationPool.startOrder)
#iis6.ApplicationPool.startOrder=86
# Start Script
#iis6.ApplicationPool.startScript=iis6/start-application-pool.ps1
# Verb that is used to prefix the description for the start step. (inherited from: iis.ApplicationPool.startVerb)
#iis6.ApplicationPool.startVerb=Start
# Options for the stop step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: iis.ApplicationPool.stopOptions)
#iis6.ApplicationPool.stopOptions=uploadClasspathResources
# Order at which the stop script will be executed. (inherited from: iis.ApplicationPool.stopOrder)
#iis6.ApplicationPool.stopOrder=14
# Stop Script
#iis6.ApplicationPool.stopScript=iis6/stop-application-pool.ps1
# Verb that is used to prefix the description for the stop step. (inherited from: iis.ApplicationPool.stopVerb)
#iis6.ApplicationPool.stopVerb=Stop
# Not applicable for IIS6
#iis6.ApplicationPool.useClassicManagedPipeline=false
# Not applicable for IIS6
#iis6.ApplicationPoolSpec.managedRuntimeVersion=UNUSED
# Not applicable for IIS6
#iis6.ApplicationPoolSpec.useClassicManagedPipeline=false
# Not applicable for IIS6
#iis6.ApplicationSpec.protocols=UNUSED
# Deployeds To Discover (inherited from: iis.Server.deployedsToDiscover)
#iis6.Server.deployedsToDiscover=null
# Order at which the discover step will be executed. (inherited from: iis.Server.discoverOrder)
#iis6.Server.discoverOrder=0
# Script invoked to inspect this container and discover deployeds on it. (inherited from: iis.Server.discoverScript)
#iis6.Server.discoverScript=null
# Path to the installation directory containing the different versions of the .NET Framework
#iis6.Server.dotNetFrameworkInstallationPath=C:\WINDOWS\Microsoft.NET\Framework64
# Library Scripts
#iis6.Server.libraryScripts=powershell/runtime/base.ps1,iis/runtime/assert.ps1,iis6/runtime/iis6-admin.ps1
# Power Shell Path (inherited from: iis.Server.powerShellPath)
#iis6.Server.powerShellPath=powershell
# NOT USED
#iis6.Server.sleepAfterAppPoolCreate=null
# If set to true, multiple steps at the same order will be batched together in one batch to improve performance over high-latency WinRM connections (inherited from: iis.VirtualDirectory.batchSteps)
#iis6.VirtualDirectory.batchSteps=false
# Additional classpath resources that should be uploaded to the working directory before executing the script. (inherited from: iis.VirtualDirectory.classpathResources)
#iis6.VirtualDirectory.classpathResources=null
# Options for the create step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: iis.VirtualDirectory.createOptions)
#iis6.VirtualDirectory.createOptions=uploadArtifactData,uploadClasspathResources
# Order at which the create step will be executed. (inherited from: iis.VirtualDirectory.createOrder)
#iis6.VirtualDirectory.createOrder=60
# Create Script
#iis6.VirtualDirectory.createScript=iis6/create-or-modify-virtual-directory.ps1
# Verb that is used to prefix the description for the create step. (inherited from: iis.VirtualDirectory.createVerb)
#iis6.VirtualDirectory.createVerb=Create
# Options for the destroy step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: iis.VirtualDirectory.destroyOptions)
#iis6.VirtualDirectory.destroyOptions=uploadClasspathResources
# Order at which the destroy step will be executed. (inherited from: iis.VirtualDirectory.destroyOrder)
#iis6.VirtualDirectory.destroyOrder=40
# Destroy Script
#iis6.VirtualDirectory.destroyScript=iis6/destroy-virtual-directory.ps1
# Verb that is used to prefix the description for the destroy step. (inherited from: iis.VirtualDirectory.destroyVerb)
#iis6.VirtualDirectory.destroyVerb=Destroy
# Not applicable for IIS6
#iis6.VirtualDirectory.directoryBrowse_enabled=false
# Not applicable for IIS6
#iis6.VirtualDirectory.directoryBrowse_showFlags=NOTUSED
# Order at which the discover step will be executed. (inherited from: iis.VirtualDirectory.discoverOrder)
#iis6.VirtualDirectory.discoverOrder=50
# Discover Script
#iis6.VirtualDirectory.discoverScript=iis6/inspect-virtual-directories.ps1
# List of scripts to append to the the step script. (inherited from: iis.VirtualDirectory.libraryScripts)
#iis6.VirtualDirectory.libraryScripts=iis/library/resource.ps1
# Maximum number of steps in a batch. (inherited from: iis.VirtualDirectory.maxBatchSize)
#iis6.VirtualDirectory.maxBatchSize=100
# Options for the modify step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: iis.VirtualDirectory.modifyOptions)
#iis6.VirtualDirectory.modifyOptions=uploadArtifactData,exposePreviousDeployed
# Order at which the modify step will be executed. (inherited from: iis.VirtualDirectory.modifyOrder)
#iis6.VirtualDirectory.modifyOrder=60
# Modify Script
#iis6.VirtualDirectory.modifyScript=iis6/create-or-modify-virtual-directory.ps1
# Verb that is used to prefix the description for the modify step. (inherited from: iis.VirtualDirectory.modifyVerb)
#iis6.VirtualDirectory.modifyVerb=Modify
# Options for the noop step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: iis.VirtualDirectory.noopOptions)
#iis6.VirtualDirectory.noopOptions=uploadClasspathResources
# Order at which the noop step will be executed. (inherited from: iis.VirtualDirectory.noopOrder)
#iis6.VirtualDirectory.noopOrder=50
# PowerShell script invoked to noop a resource or an artifact on Windows. (inherited from: iis.VirtualDirectory.noopScript)
#iis6.VirtualDirectory.noopScript=null
# Verb that is used to prefix the description for the noop step. (inherited from: iis.VirtualDirectory.noopVerb)
#iis6.VirtualDirectory.noopVerb=Noop
# Options for the start step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: iis.VirtualDirectory.startOptions)
#iis6.VirtualDirectory.startOptions=uploadClasspathResources
# Order at which the start step will be executed. (inherited from: iis.VirtualDirectory.startOrder)
#iis6.VirtualDirectory.startOrder=90
# PowerShell script invoked to start a resource of an artifact on Windows. (inherited from: iis.VirtualDirectory.startScript)
#iis6.VirtualDirectory.startScript=null
# Verb that is used to prefix the description for the start step. (inherited from: iis.VirtualDirectory.startVerb)
#iis6.VirtualDirectory.startVerb=Start
# Options for the stop step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: iis.VirtualDirectory.stopOptions)
#iis6.VirtualDirectory.stopOptions=uploadClasspathResources
# Order at which the stop script will be executed. (inherited from: iis.VirtualDirectory.stopOrder)
#iis6.VirtualDirectory.stopOrder=10
# PowerShell script invoked to stop a resource or an artifact on Windows. (inherited from: iis.VirtualDirectory.stopScript)
#iis6.VirtualDirectory.stopScript=null
# Verb that is used to prefix the description for the stop step. (inherited from: iis.VirtualDirectory.stopVerb)
#iis6.VirtualDirectory.stopVerb=Stop
# If set to true, multiple steps at the same order will be batched together in one batch to improve performance over high-latency WinRM connections (inherited from: iis.Website.batchSteps)
#iis6.Website.batchSteps=false
# Additional classpath resources that should be uploaded to the working directory before executing the script. (inherited from: iis.Website.classpathResources)
#iis6.Website.classpathResources=null
# Options for the create step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: iis.Website.createOptions)
#iis6.Website.createOptions=uploadArtifactData,uploadClasspathResources
# Order at which the create step will be executed. (inherited from: iis.Website.createOrder)
#iis6.Website.createOrder=58
# Create Script
#iis6.Website.createScript=iis6/create-or-modify-website.ps1
# Verb that is used to prefix the description for the create step. (inherited from: iis.Website.createVerb)
#iis6.Website.createVerb=Create
# Options for the destroy step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: iis.Website.destroyOptions)
#iis6.Website.destroyOptions=uploadClasspathResources
# Order at which the destroy step will be executed. (inherited from: iis.Website.destroyOrder)
#iis6.Website.destroyOrder=42
# Destroy Script
#iis6.Website.destroyScript=iis6/destroy-website.ps1
# Verb that is used to prefix the description for the destroy step. (inherited from: iis.Website.destroyVerb)
#iis6.Website.destroyVerb=Destroy
# Not applicable for IIS6
#iis6.Website.directoryBrowse_enabled=false
# Not applicable for IIS6
#iis6.Website.directoryBrowse_showFlags=NOTUSED
# Order at which the discover step will be executed. (inherited from: iis.Website.discoverOrder)
#iis6.Website.discoverOrder=50
# Discover Script
#iis6.Website.discoverScript=iis6/inspect-websites.ps1
# List of scripts to append to the the step script. (inherited from: iis.Website.libraryScripts)
#iis6.Website.libraryScripts=iis/library/resource.ps1
# Maximum number of steps in a batch. (inherited from: iis.Website.maxBatchSize)
#iis6.Website.maxBatchSize=100
# Options for the modify step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: iis.Website.modifyOptions)
#iis6.Website.modifyOptions=uploadArtifactData,exposePreviousDeployed
# Order at which the modify step will be executed. (inherited from: iis.Website.modifyOrder)
#iis6.Website.modifyOrder=58
# Modify Script
#iis6.Website.modifyScript=iis6/create-or-modify-website.ps1
# Verb that is used to prefix the description for the modify step. (inherited from: iis.Website.modifyVerb)
#iis6.Website.modifyVerb=Modify
# Options for the noop step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: iis.Website.noopOptions)
#iis6.Website.noopOptions=uploadClasspathResources
# Order at which the noop step will be executed. (inherited from: iis.Website.noopOrder)
#iis6.Website.noopOrder=50
# PowerShell script invoked to noop a resource or an artifact on Windows. (inherited from: iis.Website.noopScript)
#iis6.Website.noopScript=null
# Verb that is used to prefix the description for the noop step. (inherited from: iis.Website.noopVerb)
#iis6.Website.noopVerb=Noop
# Options for the start step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: iis.Website.startOptions)
#iis6.Website.startOptions=uploadClasspathResources
# Order at which the start step will be executed. (inherited from: iis.Website.startOrder)
#iis6.Website.startOrder=90
# Start Script
#iis6.Website.startScript=iis6/start-website.ps1
# Verb that is used to prefix the description for the start step. (inherited from: iis.Website.startVerb)
#iis6.Website.startVerb=Start
# Options for the stop step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: iis.Website.stopOptions)
#iis6.Website.stopOptions=uploadClasspathResources
# Order at which the stop script will be executed. (inherited from: iis.Website.stopOrder)
#iis6.Website.stopOrder=10
# Stop Script
#iis6.Website.stopScript=iis6/stop-website.ps1
# Verb that is used to prefix the description for the stop step. (inherited from: iis.Website.stopVerb)
#iis6.Website.stopVerb=Stop
# The delimiters used indicate placeholders, defaults to '{{ }}'. This is a 5 character string with a space in the middle, the first two are the leading delimiter, the last two are the closing delimiter (inherited from: udm.BaseDeployableArchiveArtifact.delimiters)
#jee.Ear.delimiters={{ }}
# A map that maps regular expressions matching the full path of file(s) in the artifact to character set encodings (inherited from: udm.BaseDeployableArchiveArtifact.fileEncodings)
#jee.Ear.fileEncodings=.+\.properties:ISO-8859-1
# Regular expression that matches file names of text files (inherited from: udm.BaseDeployableArchiveArtifact.textFileNamesRegex)
#jee.Ear.textFileNamesRegex=.+\.(cfg | conf | config | ini | properties | props | txt | asp | aspx | htm | html | jsf | jsp | xht | xhtml | sql | xml | xsd | xsl | xslt)
# The delimiters used indicate placeholders, defaults to '{{ }}'. This is a 5 character string with a space in the middle, the first two are the leading delimiter, the last two are the closing delimiter (inherited from: udm.BaseDeployableArchiveArtifact.delimiters)
#jee.EjbJar.delimiters={{ }}
# A map that maps regular expressions matching the full path of file(s) in the artifact to character set encodings (inherited from: udm.BaseDeployableArchiveArtifact.fileEncodings)
#jee.EjbJar.fileEncodings=.+\.properties:ISO-8859-1
# Regular expression that matches file names of text files (inherited from: udm.BaseDeployableArchiveArtifact.textFileNamesRegex)
#jee.EjbJar.textFileNamesRegex=.+\.(cfg | conf | config | ini | properties | props | txt | asp | aspx | htm | html | jsf | jsp | xht | xhtml | sql | xml | xsd | xsl | xslt)
# The delimiters used indicate placeholders, defaults to '{{ }}'. This is a 5 character string with a space in the middle, the first two are the leading delimiter, the last two are the closing delimiter (inherited from: udm.BaseDeployableArchiveArtifact.delimiters)
#jee.War.delimiters={{ }}
# A map that maps regular expressions matching the full path of file(s) in the artifact to character set encodings (inherited from: udm.BaseDeployableArchiveArtifact.fileEncodings)
#jee.War.fileEncodings=.+\.properties:ISO-8859-1
# Regular expression that matches file names of text files (inherited from: udm.BaseDeployableArchiveArtifact.textFileNamesRegex)
#jee.War.textFileNamesRegex=.+\.(cfg | conf | config | ini | properties | props | txt | asp | aspx | htm | html | jsf | jsp | xht | xhtml | sql | xml | xsd | xsl | xslt)
# SMTP port
#mail.SmtpServer.port=25
# Port on which the CIFS server runs
#overthere.CifsHost.cifsPort=445
# Number of milliseconds Overthere waits for a connection to a remote host to be established (inherited from: overthere.RemoteHost.connectionTimeoutMillis)
#overthere.CifsHost.connectionTimeoutMillis=1200000
# Type of CIFS connection to create
#overthere.CifsHost.connectionType=WINRM_INTERNAL
# Operating system the host runs
#overthere.CifsHost.os=WINDOWS
# Protocol
#overthere.CifsHost.protocol=cifs
# If true, delete the temporary connection directory when the connection is closed (inherited from: overthere.RemoteHost.tmpDeleteOnDisconnect)
#overthere.CifsHost.tmpDeleteOnDisconnect=true
# Number of times Overthere attempts to create a temporary file with a unique name (inherited from: overthere.RemoteHost.tmpFileCreationRetries)
#overthere.CifsHost.tmpFileCreationRetries=1000
# Context used by the WinRM server (WINRM only)
#overthere.CifsHost.winrmContext=/wsman
# Enable SSL communication to the WinRM server
#overthere.CifsHost.winrmEnableHttps=false
# Envelop size for WinRM messages (WINRM only)
#overthere.CifsHost.winrmEnvelopSize=153600
# HTTPS certifiacte trust strategy for WinRM over HTTPS (WINRM_INTERNAL only)
#overthere.CifsHost.winrmHttpsCertificateTrustStrategy=STRICT
# HTTPS host name verification strategy for WinRM over HTTPS (WINRM_INTERNAL only)
#overthere.CifsHost.winrmHttpsHostnameVerificationStrategy=STRICT
# Add the port number (e.g. 5985) to the service principal name (SPN) for which a Kerberos ticket is requested (WINRM_INTERNAL only)
#overthere.CifsHost.winrmKerberosAddPortToSpn=false
# Enable Kerberos debug messages (WINRM only)
#overthere.CifsHost.winrmKerberosDebug=false
# Use the HTTP protocol in the service principal name (SPN) for which a Kerberos ticket is requested, instead of the default WSMAN protocol (WINRM_INTERNAL only)
#overthere.CifsHost.winrmKerberosUseHttpSpn=false
# Locale to use for WinRM messages (WINRM only)
#overthere.CifsHost.winrmLocale=en-US
# Timeout to use for WinRM messages in XML schema duration format
#overthere.CifsHost.winrmTimeout=PT60.000S
# Specifies that the user's credentials can be used to access a remote share, for example, found on a different machine than the target endpoint (WINRM_NATIVE only)
#overthere.CifsHost.winrsAllowDelegate=false
# Turn on compression. Older installations on remote machines may not support compression so it is off by default (WINRM_NATIVE only)
#overthere.CifsHost.winrsCompression=false
# Specifies that echo should be disabled. This may be necessary to ensure that user's answers to remote prompts are not displayed locally (WINRM_NATIVE only)
#overthere.CifsHost.winrsNoecho=false
# Specifies that the user's profile should not be loaded. By default the server will attempt to load the user profile. If the remote user is not a local administrator on the target system then this option will be required (the default willresult in error) (WINRM_NATIVE only)
#overthere.CifsHost.winrsNoprofile=false
# Disable encryption. Requires the remote host to have been configured to allow that (WINRM_NATIVE only)
#overthere.CifsHost.winrsUnencrypted=false
# Protocol to use when connecting to this host
#overthere.Host.protocol=null
# If true, delete the temporary connection directory when the connection is closed
#overthere.Host.tmpDeleteOnDisconnect=true
# Number of times Overthere attempts to create a temporary file with a unique name
#overthere.Host.tmpFileCreationRetries=1000
# Number of milliseconds Overthere waits for a connection to a remote host to be established (inherited from: overthere.RemoteHost.connectionTimeoutMillis)
#overthere.Jumpstation.connectionTimeoutMillis=1200000
# Os
#overthere.Jumpstation.os=UNIX
# Protocol to use when connecting to this host (inherited from: overthere.RemoteHost.protocol)
#overthere.Jumpstation.protocol=null
# The default platform value (/tmp) suffices as no temporary files will be placed on the jumpstation
#overthere.Jumpstation.temporaryDirectoryPath=null
# If true, delete the temporary connection directory when the connection is closed (inherited from: overthere.RemoteHost.tmpDeleteOnDisconnect)
#overthere.Jumpstation.tmpDeleteOnDisconnect=true
# Number of times Overthere attempts to create a temporary file with a unique name (inherited from: overthere.RemoteHost.tmpFileCreationRetries)
#overthere.Jumpstation.tmpFileCreationRetries=1000
# Protocol
#overthere.LocalHost.protocol=local
# If true, delete the temporary connection directory when the connection is closed (inherited from: overthere.Host.tmpDeleteOnDisconnect)
#overthere.LocalHost.tmpDeleteOnDisconnect=true
# Number of times Overthere attempts to create a temporary file with a unique name (inherited from: overthere.Host.tmpFileCreationRetries)
#overthere.LocalHost.tmpFileCreationRetries=1000
# Number of milliseconds Overthere waits for a connection to a remote host to be established
#overthere.RemoteHost.connectionTimeoutMillis=1200000
# Protocol to use when connecting to this host (inherited from: overthere.Host.protocol)
#overthere.RemoteHost.protocol=null
# If true, delete the temporary connection directory when the connection is closed (inherited from: overthere.Host.tmpDeleteOnDisconnect)
#overthere.RemoteHost.tmpDeleteOnDisconnect=true
# Number of times Overthere attempts to create a temporary file with a unique name (inherited from: overthere.Host.tmpFileCreationRetries)
#overthere.RemoteHost.tmpFileCreationRetries=1000
# If true, a default PTY (dummy:80:24:0:0) is allocated when executing a command
#overthere.SshHost.allocateDefaultPty=false
# Specification for the PTY to be allocated when executing a command. The format is TERM:COLS:ROWS:WIDTH:HEIGHT, e.g. xterm:80:24:0:0
#overthere.SshHost.allocatePty=null
# Number of milliseconds Overthere waits for a connection to a remote host to be established (inherited from: overthere.RemoteHost.connectionTimeoutMillis)
#overthere.SshHost.connectionTimeoutMillis=1200000
# Type of SSH connection to create
#overthere.SshHost.connectionType=SFTP
# Regular expression to look for in keyboard-interactive authentication before sending the password
#overthere.SshHost.interactiveKeyboardAuthRegex=.*Password:[ ]?
# Port on which the SSH server runs
#overthere.SshHost.port=22
# Protocol
#overthere.SshHost.protocol=ssh
# Su command to prefix to the original command. The placeholder {0} is replaced with the sudoUsername
#overthere.SshHost.suCommandPrefix=su - {0} -c
# If true, permissions are explicitly changed with chmod -R go+rX after uploading a file or directory
#overthere.SshHost.suOverrideUmask=true
# Regular expression to look for before sending the password
#overthere.SshHost.suPasswordPromptRegex=.*[Pp]assword.*:
# If true, files are copied from the connection temporary directory using the -p flag to the cp command
#overthere.SshHost.suPreserveAttributesOnCopyFromTempFile=true
# If true, files are copied to the connection temporary directory using the -p flag to the cp command
#overthere.SshHost.suPreserveAttributesOnCopyToTempFile=true
# If true, the original command is quoted when it is prefixed with suCommandPrefix
#overthere.SshHost.suQuoteCommand=true
# Sudo command to prefix to the original command. The placeholder {0} is replaced with the sudoUsername
#overthere.SshHost.sudoCommandPrefix=sudo -u {0}
# If true, permissions are explicitly changed with chmod -R go+rX after uploading a file or directory
#overthere.SshHost.sudoOverrideUmask=true
# Regular expression to look for in interactive sudo before sending the password
#overthere.SshHost.sudoPasswordPromptRegex=.*[Pp]assword.*:
# If true, files are copied from the connection temporary directory using the -p flag to the cp command
#overthere.SshHost.sudoPreserveAttributesOnCopyFromTempFile=true
# If true, files are copied to the connection temporary directory using the -p flag to the cp command
#overthere.SshHost.sudoPreserveAttributesOnCopyToTempFile=true
# If true, the original command is quoted when it is prefixed with sudoCommandPrefix
#overthere.SshHost.sudoQuoteCommand=false
# If true, delete the temporary connection directory when the connection is closed (inherited from: overthere.RemoteHost.tmpDeleteOnDisconnect)
#overthere.SshHost.tmpDeleteOnDisconnect=true
# Number of times Overthere attempts to create a temporary file with a unique name (inherited from: overthere.RemoteHost.tmpFileCreationRetries)
#overthere.SshHost.tmpFileCreationRetries=1000
# Number of milliseconds Overthere waits for a connection to a remote host to be established (inherited from: overthere.Jumpstation.connectionTimeoutMillis)
#overthere.SshJumpstation.connectionTimeoutMillis=1200000
# Connection Type
#overthere.SshJumpstation.connectionType=TUNNEL
# Regular expression to look for in keyboard-interactive authentication before sending the password
#overthere.SshJumpstation.interactiveKeyboardAuthRegex=.*Password:[ ]?
# Operating system the host runs (inherited from: overthere.Jumpstation.os)
#overthere.SshJumpstation.os=UNIX
# Port on which the SSH server runs
#overthere.SshJumpstation.port=22
# Port from where to start looking for freely available ports to use as the local part of an SSH port forward
#overthere.SshJumpstation.portAllocationRangeStart=1025
# Protocol
#overthere.SshJumpstation.protocol=ssh
# The default platform value (/tmp) suffices as no temporary files will be placed on the jumpstation (inherited from: overthere.Jumpstation.temporaryDirectoryPath)
#overthere.SshJumpstation.temporaryDirectoryPath=null
# If true, delete the temporary connection directory when the connection is closed (inherited from: overthere.Jumpstation.tmpDeleteOnDisconnect)
#overthere.SshJumpstation.tmpDeleteOnDisconnect=true
# Number of times Overthere attempts to create a temporary file with a unique name (inherited from: overthere.Jumpstation.tmpFileCreationRetries)
#overthere.SshJumpstation.tmpFileCreationRetries=1000
# Optional map of parameters to pass to the steps (inherited from: schedule.StepJob.controlTaskParams)
#policy.JythonStepJob.controlTaskParams=null
# Optional map of parameters to pass to the steps (inherited from: policy.JythonStepJob.controlTaskParams)
#policy.PackageRetentionPolicy.controlTaskParams=null
# Description
#policy.PackageRetentionPolicy.description=Execute package removal job according to policy
# The policy should execute without removing the packages.
#policy.PackageRetentionPolicy.dryRun=false
# Policy Type
#policy.PackageRetentionPolicy.policyType=LAST_N_ALL_ENV
# Specify the daily crontab schedule to execute this policy. The pattern is a list of six single space-separated fields: representing second, minute, hour, day, month, weekday. Month and weekday names can be given as the first three letters of the English names. Example patterns: '0 0 * * * *' = the top of every hour of every day, '0 0 14 * * SAT,SUN' = 14 o'clock on each weekend day, '0 0 9-17 * * MON-FRI' = on the hour nine-to-five weekdays, '0 0 0 1 * *' = every 1st of month at midnight.
#policy.PackageRetentionPolicy.schedule=0 0 18 * * *
# Script Path
#policy.PackageRetentionPolicy.scriptPath=policy/scripts/purge-packages.py
# Path of the exported ZIP file. The property accepts ${} placeholders where valid keys are CI properties with addition of 'execDate' and 'execTime', e.g. export/task_export_${execDate}_${execTime}.zip.
#policy.TaskRetentionPolicy.archivePath=export/task_export_${execDate}_${execTime}.zip
# Optional map of parameters to pass to the steps (inherited from: policy.JythonStepJob.controlTaskParams)
#policy.TaskRetentionPolicy.controlTaskParams=null
# Description
#policy.TaskRetentionPolicy.description=Execute task removal job according to policy
# The policy should execute without removing the deprecated tasks.
#policy.TaskRetentionPolicy.dryRun=false
# Tasks will be exported into a ZIP file before being purged from the repository.
#policy.TaskRetentionPolicy.exportTasks=true
# Specify the daily crontab schedule to execute this policy. The pattern is a list of six single space-separated fields: representing second, minute, hour, day, month, weekday. Month and weekday names can be given as the first three letters of the English names. Example patterns: '0 0 * * * *' = the top of every hour of every day, '0 0 14 * * SAT,SUN' = 14 o'clock on each weekend day, '0 0 9-17 * * MON-FRI' = on the hour nine-to-five weekdays, '0 0 0 1 * *' = every 1st of month at midnight.
#policy.TaskRetentionPolicy.schedule=0 30 18 * * *
# Script Path
#policy.TaskRetentionPolicy.scriptPath=policy/scripts/purge-tasks.py
# If set to true, multiple steps at the same order will be batched together in one batch to improve performance over high-latency WinRM connections
#powershell.BaseExtensiblePowerShellDeployed.batchSteps=false
# Additional classpath resources that should be uploaded to the working directory before executing the script. (inherited from: powershell.BasePowerShellDeployed.classpathResources)
#powershell.BaseExtensiblePowerShellDeployed.classpathResources=null
# Options for the create step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed).
#powershell.BaseExtensiblePowerShellDeployed.createOptions=uploadArtifactData,uploadClasspathResources
# Order at which the create step will be executed.
#powershell.BaseExtensiblePowerShellDeployed.createOrder=60
# PowerShell script invoked to create a resource (or deploy an artifact) on Windows.
#powershell.BaseExtensiblePowerShellDeployed.createScript=null
# Verb that is used to prefix the description for the create step.
#powershell.BaseExtensiblePowerShellDeployed.createVerb=Create
# Options for the destroy step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed).
#powershell.BaseExtensiblePowerShellDeployed.destroyOptions=uploadClasspathResources
# Order at which the destroy step will be executed.
#powershell.BaseExtensiblePowerShellDeployed.destroyOrder=40
# PowerShell script invoked to destroy a resource (or undeploy an artifact) on Windows.
#powershell.BaseExtensiblePowerShellDeployed.destroyScript=null
# Verb that is used to prefix the description for the destroy step.
#powershell.BaseExtensiblePowerShellDeployed.destroyVerb=Destroy
# Order at which the discover step will be executed. (inherited from: powershell.BasePowerShellDeployed.discoverOrder)
#powershell.BaseExtensiblePowerShellDeployed.discoverOrder=50
# Script invoked to discover and inspect deployeds of this type. (inherited from: powershell.BasePowerShellDeployed.discoverScript)
#powershell.BaseExtensiblePowerShellDeployed.discoverScript=null
# List of scripts to append to the the step script. (inherited from: powershell.BasePowerShellDeployed.libraryScripts)
#powershell.BaseExtensiblePowerShellDeployed.libraryScripts=null
# Maximum number of steps in a batch.
#powershell.BaseExtensiblePowerShellDeployed.maxBatchSize=100
# Options for the modify step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed).
#powershell.BaseExtensiblePowerShellDeployed.modifyOptions=uploadArtifactData,uploadClasspathResources
# Order at which the modify step will be executed.
#powershell.BaseExtensiblePowerShellDeployed.modifyOrder=60
# PowerShell script invoked to modify a resource (or an artifact) on Windows.
#powershell.BaseExtensiblePowerShellDeployed.modifyScript=null
# Verb that is used to prefix the description for the modify step.
#powershell.BaseExtensiblePowerShellDeployed.modifyVerb=Modify
# Options for the noop step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed).
#powershell.BaseExtensiblePowerShellDeployed.noopOptions=uploadClasspathResources
# Order at which the noop step will be executed.
#powershell.BaseExtensiblePowerShellDeployed.noopOrder=50
# PowerShell script invoked to noop a resource or an artifact on Windows.
#powershell.BaseExtensiblePowerShellDeployed.noopScript=null
# Verb that is used to prefix the description for the noop step.
#powershell.BaseExtensiblePowerShellDeployed.noopVerb=Noop
# If set to true, the start script will be executed if this deployed is being created.
#powershell.BaseExtensiblePowerShellDeployed.startOnCreate=true
# Options for the start step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed).
#powershell.BaseExtensiblePowerShellDeployed.startOptions=uploadClasspathResources
# Order at which the start step will be executed.
#powershell.BaseExtensiblePowerShellDeployed.startOrder=90
# PowerShell script invoked to start a resource of an artifact on Windows.
#powershell.BaseExtensiblePowerShellDeployed.startScript=null
# Verb that is used to prefix the description for the start step.
#powershell.BaseExtensiblePowerShellDeployed.startVerb=Start
# If set to true, the stop script will be executed if this deployed is being destroyed.
#powershell.BaseExtensiblePowerShellDeployed.stopOnDestroy=true
# Options for the stop step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed).
#powershell.BaseExtensiblePowerShellDeployed.stopOptions=uploadClasspathResources
# Order at which the stop script will be executed.
#powershell.BaseExtensiblePowerShellDeployed.stopOrder=10
# PowerShell script invoked to stop a resource or an artifact on Windows.
#powershell.BaseExtensiblePowerShellDeployed.stopScript=null
# If set to true, the stop and start scripts will be executed if this deployed is being modified.
#powershell.BaseExtensiblePowerShellDeployed.stopStartOnModify=true
# If set to true, the stop and start scripts will be executed if this deployable is not being modified.
#powershell.BaseExtensiblePowerShellDeployed.stopStartOnNoop=true
# Verb that is used to prefix the description for the stop step.
#powershell.BaseExtensiblePowerShellDeployed.stopVerb=Stop
# Deployeds To Discover
#powershell.BasePowerShellContainer.deployedsToDiscover=null
# Order at which the discover step will be executed.
#powershell.BasePowerShellContainer.discoverOrder=0
# Script invoked to inspect this container and discover deployeds on it.
#powershell.BasePowerShellContainer.discoverScript=null
# List of scripts to append to the the step script.
#powershell.BasePowerShellContainer.libraryScripts=powershell/runtime/base.ps1
# Power Shell Path
#powershell.BasePowerShellContainer.powerShellPath=powershell
# The delimiters used indicate placeholders, defaults to '{{ }}'. This is a 5 character string with a space in the middle, the first two are the leading delimiter, the last two are the closing delimiter (inherited from: udm.BaseDeployableArchiveArtifact.delimiters)
#powershell.BasePowerShellDeployableArchiveArtifact.delimiters={{ }}
# A map that maps regular expressions matching the full path of file(s) in the artifact to character set encodings (inherited from: udm.BaseDeployableArchiveArtifact.fileEncodings)
#powershell.BasePowerShellDeployableArchiveArtifact.fileEncodings=.+\.properties:ISO-8859-1
# Regular expression that matches file names of text files (inherited from: udm.BaseDeployableArchiveArtifact.textFileNamesRegex)
#powershell.BasePowerShellDeployableArchiveArtifact.textFileNamesRegex=.+\.(cfg | conf | config | ini | properties | props | txt | asp | aspx | htm | html | jsf | jsp | xht | xhtml | sql | xml | xsd | xsl | xslt)
# The delimiters used indicate placeholders, defaults to '{{ }}'. This is a 5 character string with a space in the middle, the first two are the leading delimiter, the last two are the closing delimiter (inherited from: udm.BaseDeployableFileArtifact.delimiters)
#powershell.BasePowerShellDeployableFileArtifact.delimiters={{ }}
# A map that maps regular expressions matching the full path of file(s) in the artifact to character set encodings (inherited from: udm.BaseDeployableFileArtifact.fileEncodings)
#powershell.BasePowerShellDeployableFileArtifact.fileEncodings=.+\.properties:ISO-8859-1
# Regular expression that matches file names of text files (inherited from: udm.BaseDeployableFileArtifact.textFileNamesRegex)
#powershell.BasePowerShellDeployableFileArtifact.textFileNamesRegex=.+\.(cfg | conf | config | ini | properties | props | txt | asp | aspx | htm | html | jsf | jsp | xht | xhtml | sql | xml | xsd | xsl | xslt)
# The delimiters used indicate placeholders, defaults to '{{ }}'. This is a 5 character string with a space in the middle, the first two are the leading delimiter, the last two are the closing delimiter (inherited from: udm.BaseDeployableFolderArtifact.delimiters)
#powershell.BasePowerShellDeployableFolderArtifact.delimiters={{ }}
# A map that maps regular expressions matching the full path of file(s) in the artifact to character set encodings (inherited from: udm.BaseDeployableFolderArtifact.fileEncodings)
#powershell.BasePowerShellDeployableFolderArtifact.fileEncodings=.+\.properties:ISO-8859-1
# Regular expression that matches file names of text files (inherited from: udm.BaseDeployableFolderArtifact.textFileNamesRegex)
#powershell.BasePowerShellDeployableFolderArtifact.textFileNamesRegex=.+\.(cfg | conf | config | ini | properties | props | txt | asp | aspx | htm | html | jsf | jsp | xht | xhtml | sql | xml | xsd | xsl | xslt)
# Additional classpath resources that should be uploaded to the working directory before executing the script.
#powershell.BasePowerShellDeployed.classpathResources=null
# Order at which the discover step will be executed.
#powershell.BasePowerShellDeployed.discoverOrder=50
# Script invoked to discover and inspect deployeds of this type.
#powershell.BasePowerShellDeployed.discoverScript=null
# List of scripts to append to the the step script.
#powershell.BasePowerShellDeployed.libraryScripts=null
# If set to true, multiple steps at the same order will be batched together in one batch to improve performance over high-latency WinRM connections (inherited from: powershell.BaseExtensiblePowerShellDeployed.batchSteps)
#powershell.ExtensiblePowerShellDeployed.batchSteps=false
# Additional classpath resources that should be uploaded to the working directory before executing the script. (inherited from: powershell.BaseExtensiblePowerShellDeployed.classpathResources)
#powershell.ExtensiblePowerShellDeployed.classpathResources=null
# Options for the create step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: powershell.BaseExtensiblePowerShellDeployed.createOptions)
#powershell.ExtensiblePowerShellDeployed.createOptions=uploadArtifactData,uploadClasspathResources
# Order at which the create step will be executed. (inherited from: powershell.BaseExtensiblePowerShellDeployed.createOrder)
#powershell.ExtensiblePowerShellDeployed.createOrder=60
# PowerShell script invoked to create a resource (or deploy an artifact) on Windows. (inherited from: powershell.BaseExtensiblePowerShellDeployed.createScript)
#powershell.ExtensiblePowerShellDeployed.createScript=null
# Verb that is used to prefix the description for the create step. (inherited from: powershell.BaseExtensiblePowerShellDeployed.createVerb)
#powershell.ExtensiblePowerShellDeployed.createVerb=Create
# Options for the destroy step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: powershell.BaseExtensiblePowerShellDeployed.destroyOptions)
#powershell.ExtensiblePowerShellDeployed.destroyOptions=uploadClasspathResources
# Order at which the destroy step will be executed. (inherited from: powershell.BaseExtensiblePowerShellDeployed.destroyOrder)
#powershell.ExtensiblePowerShellDeployed.destroyOrder=40
# PowerShell script invoked to destroy a resource (or undeploy an artifact) on Windows. (inherited from: powershell.BaseExtensiblePowerShellDeployed.destroyScript)
#powershell.ExtensiblePowerShellDeployed.destroyScript=null
# Verb that is used to prefix the description for the destroy step. (inherited from: powershell.BaseExtensiblePowerShellDeployed.destroyVerb)
#powershell.ExtensiblePowerShellDeployed.destroyVerb=Destroy
# Order at which the discover step will be executed. (inherited from: powershell.BaseExtensiblePowerShellDeployed.discoverOrder)
#powershell.ExtensiblePowerShellDeployed.discoverOrder=50
# Script invoked to discover and inspect deployeds of this type. (inherited from: powershell.BaseExtensiblePowerShellDeployed.discoverScript)
#powershell.ExtensiblePowerShellDeployed.discoverScript=null
# List of scripts to append to the the step script. (inherited from: powershell.BaseExtensiblePowerShellDeployed.libraryScripts)
#powershell.ExtensiblePowerShellDeployed.libraryScripts=null
# Maximum number of steps in a batch. (inherited from: powershell.BaseExtensiblePowerShellDeployed.maxBatchSize)
#powershell.ExtensiblePowerShellDeployed.maxBatchSize=100
# Options for the modify step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: powershell.BaseExtensiblePowerShellDeployed.modifyOptions)
#powershell.ExtensiblePowerShellDeployed.modifyOptions=uploadArtifactData,uploadClasspathResources
# Order at which the modify step will be executed. (inherited from: powershell.BaseExtensiblePowerShellDeployed.modifyOrder)
#powershell.ExtensiblePowerShellDeployed.modifyOrder=60
# PowerShell script invoked to modify a resource (or an artifact) on Windows. (inherited from: powershell.BaseExtensiblePowerShellDeployed.modifyScript)
#powershell.ExtensiblePowerShellDeployed.modifyScript=null
# Verb that is used to prefix the description for the modify step. (inherited from: powershell.BaseExtensiblePowerShellDeployed.modifyVerb)
#powershell.ExtensiblePowerShellDeployed.modifyVerb=Modify
# Options for the noop step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: powershell.BaseExtensiblePowerShellDeployed.noopOptions)
#powershell.ExtensiblePowerShellDeployed.noopOptions=uploadClasspathResources
# Order at which the noop step will be executed. (inherited from: powershell.BaseExtensiblePowerShellDeployed.noopOrder)
#powershell.ExtensiblePowerShellDeployed.noopOrder=50
# PowerShell script invoked to noop a resource or an artifact on Windows. (inherited from: powershell.BaseExtensiblePowerShellDeployed.noopScript)
#powershell.ExtensiblePowerShellDeployed.noopScript=null
# Verb that is used to prefix the description for the noop step. (inherited from: powershell.BaseExtensiblePowerShellDeployed.noopVerb)
#powershell.ExtensiblePowerShellDeployed.noopVerb=Noop
# Options for the start step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: powershell.BaseExtensiblePowerShellDeployed.startOptions)
#powershell.ExtensiblePowerShellDeployed.startOptions=uploadClasspathResources
# Order at which the start step will be executed. (inherited from: powershell.BaseExtensiblePowerShellDeployed.startOrder)
#powershell.ExtensiblePowerShellDeployed.startOrder=90
# PowerShell script invoked to start a resource of an artifact on Windows. (inherited from: powershell.BaseExtensiblePowerShellDeployed.startScript)
#powershell.ExtensiblePowerShellDeployed.startScript=null
# Verb that is used to prefix the description for the start step. (inherited from: powershell.BaseExtensiblePowerShellDeployed.startVerb)
#powershell.ExtensiblePowerShellDeployed.startVerb=Start
# Options for the stop step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: powershell.BaseExtensiblePowerShellDeployed.stopOptions)
#powershell.ExtensiblePowerShellDeployed.stopOptions=uploadClasspathResources
# Order at which the stop script will be executed. (inherited from: powershell.BaseExtensiblePowerShellDeployed.stopOrder)
#powershell.ExtensiblePowerShellDeployed.stopOrder=10
# PowerShell script invoked to stop a resource or an artifact on Windows. (inherited from: powershell.BaseExtensiblePowerShellDeployed.stopScript)
#powershell.ExtensiblePowerShellDeployed.stopScript=null
# Verb that is used to prefix the description for the stop step. (inherited from: powershell.BaseExtensiblePowerShellDeployed.stopVerb)
#powershell.ExtensiblePowerShellDeployed.stopVerb=Stop
# If set to true, multiple steps at the same order will be batched together in one batch to improve performance over high-latency WinRM connections (inherited from: powershell.BaseExtensiblePowerShellDeployed.batchSteps)
#powershell.ExtensiblePowerShellDeployedArtifact.batchSteps=false
# Additional classpath resources that should be uploaded to the working directory before executing the script. (inherited from: powershell.BaseExtensiblePowerShellDeployed.classpathResources)
#powershell.ExtensiblePowerShellDeployedArtifact.classpathResources=null
# Options for the create step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: powershell.BaseExtensiblePowerShellDeployed.createOptions)
#powershell.ExtensiblePowerShellDeployedArtifact.createOptions=uploadArtifactData,uploadClasspathResources
# Order at which the create step will be executed. (inherited from: powershell.BaseExtensiblePowerShellDeployed.createOrder)
#powershell.ExtensiblePowerShellDeployedArtifact.createOrder=60
# PowerShell script invoked to create a resource (or deploy an artifact) on Windows. (inherited from: powershell.BaseExtensiblePowerShellDeployed.createScript)
#powershell.ExtensiblePowerShellDeployedArtifact.createScript=null
# Verb that is used to prefix the description for the create step. (inherited from: powershell.BaseExtensiblePowerShellDeployed.createVerb)
#powershell.ExtensiblePowerShellDeployedArtifact.createVerb=Create
# Options for the destroy step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: powershell.BaseExtensiblePowerShellDeployed.destroyOptions)
#powershell.ExtensiblePowerShellDeployedArtifact.destroyOptions=uploadClasspathResources
# Order at which the destroy step will be executed. (inherited from: powershell.BaseExtensiblePowerShellDeployed.destroyOrder)
#powershell.ExtensiblePowerShellDeployedArtifact.destroyOrder=40
# PowerShell script invoked to destroy a resource (or undeploy an artifact) on Windows. (inherited from: powershell.BaseExtensiblePowerShellDeployed.destroyScript)
#powershell.ExtensiblePowerShellDeployedArtifact.destroyScript=null
# Verb that is used to prefix the description for the destroy step. (inherited from: powershell.BaseExtensiblePowerShellDeployed.destroyVerb)
#powershell.ExtensiblePowerShellDeployedArtifact.destroyVerb=Destroy
# Order at which the discover step will be executed. (inherited from: powershell.BaseExtensiblePowerShellDeployed.discoverOrder)
#powershell.ExtensiblePowerShellDeployedArtifact.discoverOrder=50
# Script invoked to discover and inspect deployeds of this type. (inherited from: powershell.BaseExtensiblePowerShellDeployed.discoverScript)
#powershell.ExtensiblePowerShellDeployedArtifact.discoverScript=null
# List of scripts to append to the the step script. (inherited from: powershell.BaseExtensiblePowerShellDeployed.libraryScripts)
#powershell.ExtensiblePowerShellDeployedArtifact.libraryScripts=null
# Maximum number of steps in a batch. (inherited from: powershell.BaseExtensiblePowerShellDeployed.maxBatchSize)
#powershell.ExtensiblePowerShellDeployedArtifact.maxBatchSize=100
# Options for the modify step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: powershell.BaseExtensiblePowerShellDeployed.modifyOptions)
#powershell.ExtensiblePowerShellDeployedArtifact.modifyOptions=uploadArtifactData,uploadClasspathResources
# Order at which the modify step will be executed. (inherited from: powershell.BaseExtensiblePowerShellDeployed.modifyOrder)
#powershell.ExtensiblePowerShellDeployedArtifact.modifyOrder=60
# PowerShell script invoked to modify a resource (or an artifact) on Windows. (inherited from: powershell.BaseExtensiblePowerShellDeployed.modifyScript)
#powershell.ExtensiblePowerShellDeployedArtifact.modifyScript=null
# Verb that is used to prefix the description for the modify step. (inherited from: powershell.BaseExtensiblePowerShellDeployed.modifyVerb)
#powershell.ExtensiblePowerShellDeployedArtifact.modifyVerb=Modify
# Options for the noop step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: powershell.BaseExtensiblePowerShellDeployed.noopOptions)
#powershell.ExtensiblePowerShellDeployedArtifact.noopOptions=uploadClasspathResources
# Order at which the noop step will be executed. (inherited from: powershell.BaseExtensiblePowerShellDeployed.noopOrder)
#powershell.ExtensiblePowerShellDeployedArtifact.noopOrder=50
# PowerShell script invoked to noop a resource or an artifact on Windows. (inherited from: powershell.BaseExtensiblePowerShellDeployed.noopScript)
#powershell.ExtensiblePowerShellDeployedArtifact.noopScript=null
# Verb that is used to prefix the description for the noop step. (inherited from: powershell.BaseExtensiblePowerShellDeployed.noopVerb)
#powershell.ExtensiblePowerShellDeployedArtifact.noopVerb=Noop
# Options for the start step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: powershell.BaseExtensiblePowerShellDeployed.startOptions)
#powershell.ExtensiblePowerShellDeployedArtifact.startOptions=uploadClasspathResources
# Order at which the start step will be executed. (inherited from: powershell.BaseExtensiblePowerShellDeployed.startOrder)
#powershell.ExtensiblePowerShellDeployedArtifact.startOrder=90
# PowerShell script invoked to start a resource of an artifact on Windows. (inherited from: powershell.BaseExtensiblePowerShellDeployed.startScript)
#powershell.ExtensiblePowerShellDeployedArtifact.startScript=null
# Verb that is used to prefix the description for the start step. (inherited from: powershell.BaseExtensiblePowerShellDeployed.startVerb)
#powershell.ExtensiblePowerShellDeployedArtifact.startVerb=Start
# Options for the stop step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: powershell.BaseExtensiblePowerShellDeployed.stopOptions)
#powershell.ExtensiblePowerShellDeployedArtifact.stopOptions=uploadClasspathResources
# Order at which the stop script will be executed. (inherited from: powershell.BaseExtensiblePowerShellDeployed.stopOrder)
#powershell.ExtensiblePowerShellDeployedArtifact.stopOrder=10
# PowerShell script invoked to stop a resource or an artifact on Windows. (inherited from: powershell.BaseExtensiblePowerShellDeployed.stopScript)
#powershell.ExtensiblePowerShellDeployedArtifact.stopScript=null
# Verb that is used to prefix the description for the stop step. (inherited from: powershell.BaseExtensiblePowerShellDeployed.stopVerb)
#powershell.ExtensiblePowerShellDeployedArtifact.stopVerb=Stop
# The order in which a discover step will be executed.
#python.PythonManagedDeployed.discoverOrder=50
# Flag to indicate whether the deployed application CI is to be injected to the Python script execution context.
#python.PythonManagedDeployed.exposeDeployedApplication=false
# List of scripts to be appended to the deployed's runtime script
#python.PythonManagedDeployed.libraryScripts=null
# Optional map of parameters to pass to the steps (inherited from: schedule.StepJob.controlTaskParams)
#schedule.GarbageCollectionJob.controlTaskParams=null
# Enables or disables triggering of the administration job
#schedule.ScheduledJob.enabled=true
# Optional map of parameters to pass to the steps
#schedule.StepJob.controlTaskParams=null
# Client Wrapper Script
#sql.Db2Client.clientWrapperScript=sql/Db2Client
# Additional classpath resources that should be uploaded to the working directory before executing the inspect script. (inherited from: sql.SqlClient.inspectClasspathResources)
#sql.Db2Client.inspectClasspathResources=null
# Classpath to the script used to inspect the generic container. (inherited from: sql.SqlClient.inspectScript)
#sql.Db2Client.inspectScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the inspect script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: sql.SqlClient.inspectTemplateClasspathResources)
#sql.Db2Client.inspectTemplateClasspathResources=null
# Additional classpath resources that should be uploaded to the working directory before executing the restart script. (inherited from: sql.SqlClient.restartClasspathResources)
#sql.Db2Client.restartClasspathResources=null
# The order of the restart container step in the step list. (inherited from: sql.SqlClient.restartOrder)
#sql.Db2Client.restartOrder=90
# Classpath to the script used to restart the generic container. (inherited from: sql.SqlClient.restartScript)
#sql.Db2Client.restartScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the restart script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: sql.SqlClient.restartTemplateClasspathResources)
#sql.Db2Client.restartTemplateClasspathResources=null
# The time to wait in seconds for a container restart action. (inherited from: sql.SqlClient.restartWaitTime)
#sql.Db2Client.restartWaitTime=0
# Additional classpath resources that should be uploaded to the working directory before executing the start script. (inherited from: sql.SqlClient.startClasspathResources)
#sql.Db2Client.startClasspathResources=null
# The order of the start container step in the step list. (inherited from: sql.SqlClient.startOrder)
#sql.Db2Client.startOrder=90
# Classpath to the script used to start the generic container. (inherited from: sql.SqlClient.startScript)
#sql.Db2Client.startScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the start script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: sql.SqlClient.startTemplateClasspathResources)
#sql.Db2Client.startTemplateClasspathResources=null
# The time to wait in seconds for a container start action. (inherited from: sql.SqlClient.startWaitTime)
#sql.Db2Client.startWaitTime=0
# Additional classpath resources that should be uploaded to the working directory before executing the stop script. (inherited from: sql.SqlClient.stopClasspathResources)
#sql.Db2Client.stopClasspathResources=null
# The order of the stop container step in the step list. (inherited from: sql.SqlClient.stopOrder)
#sql.Db2Client.stopOrder=10
# Classpath to the script used to stop the generic container. (inherited from: sql.SqlClient.stopScript)
#sql.Db2Client.stopScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the stop script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: sql.SqlClient.stopTemplateClasspathResources)
#sql.Db2Client.stopTemplateClasspathResources=null
# The time to wait in seconds for a container stop action. (inherited from: sql.SqlClient.stopWaitTime)
#sql.Db2Client.stopWaitTime=0
# If set to true, the checkpoint is set after the first script in a folder has been executed. Otherwise the checkpoint is set after the last script in a folder has been executed. (inherited from: generic.ExecutedFolder.checkpointAfterFirstScript)
#sql.ExecutedSqlScripts.checkpointAfterFirstScript=true
# Additional classpath resources that should be uploaded to the working directory before executing the script. (inherited from: generic.ExecutedFolder.classpathResources)
#sql.ExecutedSqlScripts.classpathResources=null
# Common folder that should be uploaded to the working directory. (inherited from: generic.ExecutedFolder.commonScriptFolderName)
#sql.ExecutedSqlScripts.commonScriptFolderName=common
# Options for the create step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.ExecutedFolder.createOptions)
#sql.ExecutedSqlScripts.createOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the create operation. (inherited from: generic.ExecutedFolder.createOrder)
#sql.ExecutedSqlScripts.createOrder=50
# Create Verb
#sql.ExecutedSqlScripts.createVerb=Run
# Options for the destroy step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.ExecutedFolder.destroyOptions)
#sql.ExecutedSqlScripts.destroyOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the destroy operation. (inherited from: generic.ExecutedFolder.destroyOrder)
#sql.ExecutedSqlScripts.destroyOrder=40
# Destroy Verb
#sql.ExecutedSqlScripts.destroyVerb=Rollback
# If set to true, modified scripts are also executed on a MODIFY or a NOOP. (inherited from: generic.ExecutedFolder.executeModifiedScripts)
#sql.ExecutedSqlScripts.executeModifiedScripts=true
# If set to true, rollback scripts for modified scripts are also executed on a MODIFY or a NOOP. (inherited from: generic.ExecutedFolder.executeRollbackForModifiedScripts)
#sql.ExecutedSqlScripts.executeRollbackForModifiedScripts=true
# Executor Script
#sql.ExecutedSqlScripts.executorScript=${deployed.container.clientWrapperScript}
# Additional classpath resources that should be uploaded to the working directory before executing the inspect script. (inherited from: generic.ExecutedFolder.inspectClasspathResources)
#sql.ExecutedSqlScripts.inspectClasspathResources=null
# Classpath to the script used to inspect the generic container. (inherited from: generic.ExecutedFolder.inspectScript)
#sql.ExecutedSqlScripts.inspectScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the inspect script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.ExecutedFolder.inspectTemplateClasspathResources)
#sql.ExecutedSqlScripts.inspectTemplateClasspathResources=null
# Options for the modify step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.ExecutedFolder.modifyOptions)
#sql.ExecutedSqlScripts.modifyOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the modify operation. (inherited from: generic.ExecutedFolder.modifyOrder)
#sql.ExecutedSqlScripts.modifyOrder=50
# Modify Verb (inherited from: generic.ExecutedFolder.modifyVerb)
#sql.ExecutedSqlScripts.modifyVerb=Modify
# Options for the noop step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.ExecutedFolder.noopOptions)
#sql.ExecutedSqlScripts.noopOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the noop operation. (inherited from: generic.ExecutedFolder.noopOrder)
#sql.ExecutedSqlScripts.noopOrder=50
# Noop Verb (inherited from: generic.ExecutedFolder.noopVerb)
#sql.ExecutedSqlScripts.noopVerb=Modify
# The generic container requires a restart for the action performed by this deployed. (inherited from: generic.ExecutedFolder.restartRequired)
#sql.ExecutedSqlScripts.restartRequired=false
# The generic container requires a restart for the NOOP action performed by this deployed. (inherited from: generic.ExecutedFolder.restartRequiredForNoop)
#sql.ExecutedSqlScripts.restartRequiredForNoop=false
# Rollback Script Postfix
#sql.ExecutedSqlScripts.rollbackScriptPostfix=-rollback.sql
# Rollback Script Recognition Regex
#sql.ExecutedSqlScripts.rollbackScriptRecognitionRegex=([0-9]*-.*-rollback)\.sql
# Script Recognition Regex
#sql.ExecutedSqlScripts.scriptRecognitionRegex=(?!.*-rollback\.sql)([0-9]*-.*)\.sql
# Additional template classpath resources that should be uploaded to the working directory before executing the script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.ExecutedFolder.templateClasspathResources)
#sql.ExecutedSqlScripts.templateClasspathResources=null
# Client Wrapper Script
#sql.MsSqlClient.clientWrapperScript=sql/MsSqlClient
# Additional classpath resources that should be uploaded to the working directory before executing the inspect script. (inherited from: sql.SqlClient.inspectClasspathResources)
#sql.MsSqlClient.inspectClasspathResources=null
# Classpath to the script used to inspect the generic container. (inherited from: sql.SqlClient.inspectScript)
#sql.MsSqlClient.inspectScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the inspect script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: sql.SqlClient.inspectTemplateClasspathResources)
#sql.MsSqlClient.inspectTemplateClasspathResources=null
# Additional classpath resources that should be uploaded to the working directory before executing the restart script. (inherited from: sql.SqlClient.restartClasspathResources)
#sql.MsSqlClient.restartClasspathResources=null
# The order of the restart container step in the step list. (inherited from: sql.SqlClient.restartOrder)
#sql.MsSqlClient.restartOrder=90
# Classpath to the script used to restart the generic container. (inherited from: sql.SqlClient.restartScript)
#sql.MsSqlClient.restartScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the restart script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: sql.SqlClient.restartTemplateClasspathResources)
#sql.MsSqlClient.restartTemplateClasspathResources=null
# The time to wait in seconds for a container restart action. (inherited from: sql.SqlClient.restartWaitTime)
#sql.MsSqlClient.restartWaitTime=0
# Additional classpath resources that should be uploaded to the working directory before executing the start script. (inherited from: sql.SqlClient.startClasspathResources)
#sql.MsSqlClient.startClasspathResources=null
# The order of the start container step in the step list. (inherited from: sql.SqlClient.startOrder)
#sql.MsSqlClient.startOrder=90
# Classpath to the script used to start the generic container. (inherited from: sql.SqlClient.startScript)
#sql.MsSqlClient.startScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the start script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: sql.SqlClient.startTemplateClasspathResources)
#sql.MsSqlClient.startTemplateClasspathResources=null
# The time to wait in seconds for a container start action. (inherited from: sql.SqlClient.startWaitTime)
#sql.MsSqlClient.startWaitTime=0
# Additional classpath resources that should be uploaded to the working directory before executing the stop script. (inherited from: sql.SqlClient.stopClasspathResources)
#sql.MsSqlClient.stopClasspathResources=null
# The order of the stop container step in the step list. (inherited from: sql.SqlClient.stopOrder)
#sql.MsSqlClient.stopOrder=10
# Classpath to the script used to stop the generic container. (inherited from: sql.SqlClient.stopScript)
#sql.MsSqlClient.stopScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the stop script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: sql.SqlClient.stopTemplateClasspathResources)
#sql.MsSqlClient.stopTemplateClasspathResources=null
# The time to wait in seconds for a container stop action. (inherited from: sql.SqlClient.stopWaitTime)
#sql.MsSqlClient.stopWaitTime=0
# Client Wrapper Script
#sql.MySqlClient.clientWrapperScript=sql/MySqlClient
# Additional classpath resources that should be uploaded to the working directory before executing the inspect script. (inherited from: sql.SqlClient.inspectClasspathResources)
#sql.MySqlClient.inspectClasspathResources=null
# Classpath to the script used to inspect the generic container. (inherited from: sql.SqlClient.inspectScript)
#sql.MySqlClient.inspectScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the inspect script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: sql.SqlClient.inspectTemplateClasspathResources)
#sql.MySqlClient.inspectTemplateClasspathResources=null
# Additional classpath resources that should be uploaded to the working directory before executing the restart script. (inherited from: sql.SqlClient.restartClasspathResources)
#sql.MySqlClient.restartClasspathResources=null
# The order of the restart container step in the step list. (inherited from: sql.SqlClient.restartOrder)
#sql.MySqlClient.restartOrder=90
# Classpath to the script used to restart the generic container. (inherited from: sql.SqlClient.restartScript)
#sql.MySqlClient.restartScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the restart script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: sql.SqlClient.restartTemplateClasspathResources)
#sql.MySqlClient.restartTemplateClasspathResources=null
# The time to wait in seconds for a container restart action. (inherited from: sql.SqlClient.restartWaitTime)
#sql.MySqlClient.restartWaitTime=0
# Additional classpath resources that should be uploaded to the working directory before executing the start script. (inherited from: sql.SqlClient.startClasspathResources)
#sql.MySqlClient.startClasspathResources=null
# The order of the start container step in the step list. (inherited from: sql.SqlClient.startOrder)
#sql.MySqlClient.startOrder=90
# Classpath to the script used to start the generic container. (inherited from: sql.SqlClient.startScript)
#sql.MySqlClient.startScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the start script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: sql.SqlClient.startTemplateClasspathResources)
#sql.MySqlClient.startTemplateClasspathResources=null
# The time to wait in seconds for a container start action. (inherited from: sql.SqlClient.startWaitTime)
#sql.MySqlClient.startWaitTime=0
# Additional classpath resources that should be uploaded to the working directory before executing the stop script. (inherited from: sql.SqlClient.stopClasspathResources)
#sql.MySqlClient.stopClasspathResources=null
# The order of the stop container step in the step list. (inherited from: sql.SqlClient.stopOrder)
#sql.MySqlClient.stopOrder=10
# Classpath to the script used to stop the generic container. (inherited from: sql.SqlClient.stopScript)
#sql.MySqlClient.stopScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the stop script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: sql.SqlClient.stopTemplateClasspathResources)
#sql.MySqlClient.stopTemplateClasspathResources=null
# The time to wait in seconds for a container stop action. (inherited from: sql.SqlClient.stopWaitTime)
#sql.MySqlClient.stopWaitTime=0
# Client Wrapper Script
#sql.OracleClient.clientWrapperScript=sql/OracleClient
# Additional classpath resources that should be uploaded to the working directory before executing the inspect script. (inherited from: sql.SqlClient.inspectClasspathResources)
#sql.OracleClient.inspectClasspathResources=null
# Classpath to the script used to inspect the generic container. (inherited from: sql.SqlClient.inspectScript)
#sql.OracleClient.inspectScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the inspect script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: sql.SqlClient.inspectTemplateClasspathResources)
#sql.OracleClient.inspectTemplateClasspathResources=null
# Additional classpath resources that should be uploaded to the working directory before executing the restart script. (inherited from: sql.SqlClient.restartClasspathResources)
#sql.OracleClient.restartClasspathResources=null
# The order of the restart container step in the step list. (inherited from: sql.SqlClient.restartOrder)
#sql.OracleClient.restartOrder=90
# Classpath to the script used to restart the generic container. (inherited from: sql.SqlClient.restartScript)
#sql.OracleClient.restartScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the restart script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: sql.SqlClient.restartTemplateClasspathResources)
#sql.OracleClient.restartTemplateClasspathResources=null
# The time to wait in seconds for a container restart action. (inherited from: sql.SqlClient.restartWaitTime)
#sql.OracleClient.restartWaitTime=0
# Additional classpath resources that should be uploaded to the working directory before executing the start script. (inherited from: sql.SqlClient.startClasspathResources)
#sql.OracleClient.startClasspathResources=null
# The order of the start container step in the step list. (inherited from: sql.SqlClient.startOrder)
#sql.OracleClient.startOrder=90
# Classpath to the script used to start the generic container. (inherited from: sql.SqlClient.startScript)
#sql.OracleClient.startScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the start script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: sql.SqlClient.startTemplateClasspathResources)
#sql.OracleClient.startTemplateClasspathResources=null
# The time to wait in seconds for a container start action. (inherited from: sql.SqlClient.startWaitTime)
#sql.OracleClient.startWaitTime=0
# Additional classpath resources that should be uploaded to the working directory before executing the stop script. (inherited from: sql.SqlClient.stopClasspathResources)
#sql.OracleClient.stopClasspathResources=null
# The order of the stop container step in the step list. (inherited from: sql.SqlClient.stopOrder)
#sql.OracleClient.stopOrder=10
# Classpath to the script used to stop the generic container. (inherited from: sql.SqlClient.stopScript)
#sql.OracleClient.stopScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the stop script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: sql.SqlClient.stopTemplateClasspathResources)
#sql.OracleClient.stopTemplateClasspathResources=null
# The time to wait in seconds for a container stop action. (inherited from: sql.SqlClient.stopWaitTime)
#sql.OracleClient.stopWaitTime=0
# Client Wrapper Script
#sql.PostgreSqlClient.clientWrapperScript=sql/PostgreSqlClient
# Additional classpath resources that should be uploaded to the working directory before executing the inspect script. (inherited from: sql.SqlClient.inspectClasspathResources)
#sql.PostgreSqlClient.inspectClasspathResources=null
# Classpath to the script used to inspect the generic container. (inherited from: sql.SqlClient.inspectScript)
#sql.PostgreSqlClient.inspectScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the inspect script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: sql.SqlClient.inspectTemplateClasspathResources)
#sql.PostgreSqlClient.inspectTemplateClasspathResources=null
# The port of the PostgreSQL server to connect to
#sql.PostgreSqlClient.port=5432
# Additional classpath resources that should be uploaded to the working directory before executing the restart script. (inherited from: sql.SqlClient.restartClasspathResources)
#sql.PostgreSqlClient.restartClasspathResources=null
# The order of the restart container step in the step list. (inherited from: sql.SqlClient.restartOrder)
#sql.PostgreSqlClient.restartOrder=90
# Classpath to the script used to restart the generic container. (inherited from: sql.SqlClient.restartScript)
#sql.PostgreSqlClient.restartScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the restart script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: sql.SqlClient.restartTemplateClasspathResources)
#sql.PostgreSqlClient.restartTemplateClasspathResources=null
# The time to wait in seconds for a container restart action. (inherited from: sql.SqlClient.restartWaitTime)
#sql.PostgreSqlClient.restartWaitTime=0
# Additional classpath resources that should be uploaded to the working directory before executing the start script. (inherited from: sql.SqlClient.startClasspathResources)
#sql.PostgreSqlClient.startClasspathResources=null
# The order of the start container step in the step list. (inherited from: sql.SqlClient.startOrder)
#sql.PostgreSqlClient.startOrder=90
# Classpath to the script used to start the generic container. (inherited from: sql.SqlClient.startScript)
#sql.PostgreSqlClient.startScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the start script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: sql.SqlClient.startTemplateClasspathResources)
#sql.PostgreSqlClient.startTemplateClasspathResources=null
# The time to wait in seconds for a container start action. (inherited from: sql.SqlClient.startWaitTime)
#sql.PostgreSqlClient.startWaitTime=0
# Additional classpath resources that should be uploaded to the working directory before executing the stop script. (inherited from: sql.SqlClient.stopClasspathResources)
#sql.PostgreSqlClient.stopClasspathResources=null
# The order of the stop container step in the step list. (inherited from: sql.SqlClient.stopOrder)
#sql.PostgreSqlClient.stopOrder=10
# Classpath to the script used to stop the generic container. (inherited from: sql.SqlClient.stopScript)
#sql.PostgreSqlClient.stopScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the stop script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: sql.SqlClient.stopTemplateClasspathResources)
#sql.PostgreSqlClient.stopTemplateClasspathResources=null
# The time to wait in seconds for a container stop action. (inherited from: sql.SqlClient.stopWaitTime)
#sql.PostgreSqlClient.stopWaitTime=0
# Use localhost as the hostname to connect to
#sql.PostgreSqlClient.useLocalhost=true
# SQL statement to test the connection to the PostgreSQL server
#sql.PostgreSqlClient_testConnection.testSqlStatement=SELECT 1;
# Additional classpath resources that should be uploaded to the working directory before executing the inspect script. (inherited from: generic.Container.inspectClasspathResources)
#sql.SqlClient.inspectClasspathResources=null
# Classpath to the script used to inspect the generic container. (inherited from: generic.Container.inspectScript)
#sql.SqlClient.inspectScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the inspect script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.Container.inspectTemplateClasspathResources)
#sql.SqlClient.inspectTemplateClasspathResources=null
# Additional classpath resources that should be uploaded to the working directory before executing the restart script. (inherited from: generic.Container.restartClasspathResources)
#sql.SqlClient.restartClasspathResources=null
# The order of the restart container step in the step list. (inherited from: generic.Container.restartOrder)
#sql.SqlClient.restartOrder=90
# Classpath to the script used to restart the generic container. (inherited from: generic.Container.restartScript)
#sql.SqlClient.restartScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the restart script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.Container.restartTemplateClasspathResources)
#sql.SqlClient.restartTemplateClasspathResources=null
# The time to wait in seconds for a container restart action. (inherited from: generic.Container.restartWaitTime)
#sql.SqlClient.restartWaitTime=0
# Additional classpath resources that should be uploaded to the working directory before executing the start script. (inherited from: generic.Container.startClasspathResources)
#sql.SqlClient.startClasspathResources=null
# The order of the start container step in the step list. (inherited from: generic.Container.startOrder)
#sql.SqlClient.startOrder=90
# Classpath to the script used to start the generic container. (inherited from: generic.Container.startScript)
#sql.SqlClient.startScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the start script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.Container.startTemplateClasspathResources)
#sql.SqlClient.startTemplateClasspathResources=null
# The time to wait in seconds for a container start action. (inherited from: generic.Container.startWaitTime)
#sql.SqlClient.startWaitTime=0
# Additional classpath resources that should be uploaded to the working directory before executing the stop script. (inherited from: generic.Container.stopClasspathResources)
#sql.SqlClient.stopClasspathResources=null
# The order of the stop container step in the step list. (inherited from: generic.Container.stopOrder)
#sql.SqlClient.stopOrder=10
# Classpath to the script used to stop the generic container. (inherited from: generic.Container.stopScript)
#sql.SqlClient.stopScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the stop script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.Container.stopTemplateClasspathResources)
#sql.SqlClient.stopTemplateClasspathResources=null
# The time to wait in seconds for a container stop action. (inherited from: generic.Container.stopWaitTime)
#sql.SqlClient.stopWaitTime=0
# The delimiters used indicate placeholders, defaults to '{{ }}'. This is a 5 character string with a space in the middle, the first two are the leading delimiter, the last two are the closing delimiter (inherited from: generic.Folder.delimiters)
#sql.SqlScripts.delimiters={{ }}
# A map that maps regular expressions matching the full path of file(s) in the artifact to character set encodings (inherited from: generic.Folder.fileEncodings)
#sql.SqlScripts.fileEncodings=.+\.properties:ISO-8859-1
# Regular expression that matches file names of text files (inherited from: generic.Folder.textFileNamesRegex)
#sql.SqlScripts.textFileNamesRegex=.+\.(cfg | conf | config | ini | properties | props | txt | asp | aspx | htm | html | jsf | jsp | xht | xhtml | sql | xml | xsd | xsl | xslt)
# Mail body content should be sent as HTML
#trigger.EmailNotification.sendContentAsHtml=false
# Trigger actions when the Step transitions from this state.
#trigger.StepTrigger.fromState=ANY
# Trigger actions when the Task transitions from this state.
#trigger.TaskTrigger.fromState=ANY
# If true, permissions for changing checklist requirements will be checked on import
#udm.Application.verifyChecklistPermissionsOnCreate=null
# The delimiters used indicate placeholders, defaults to '{{ }}'. This is a 5 character string with a space in the middle, the first two are the leading delimiter, the last two are the closing delimiter (inherited from: udm.BaseDeployableFileArtifact.delimiters)
#udm.BaseDeployableArchiveArtifact.delimiters={{ }}
# A map that maps regular expressions matching the full path of file(s) in the artifact to character set encodings (inherited from: udm.BaseDeployableFileArtifact.fileEncodings)
#udm.BaseDeployableArchiveArtifact.fileEncodings=.+\.properties:ISO-8859-1
# Scan Placeholders
#udm.BaseDeployableArchiveArtifact.scanPlaceholders=false
# Regular expression that matches file names of text files (inherited from: udm.BaseDeployableFileArtifact.textFileNamesRegex)
#udm.BaseDeployableArchiveArtifact.textFileNamesRegex=.+\.(cfg | conf | config | ini | properties | props | txt | asp | aspx | htm | html | jsf | jsp | xht | xhtml | sql | xml | xsd | xsl | xslt)
# The delimiters used indicate placeholders, defaults to '{{ }}'. This is a 5 character string with a space in the middle, the first two are the leading delimiter, the last two are the closing delimiter
#udm.BaseDeployableArtifact.delimiters={{ }}
# A map that maps regular expressions matching the full path of file(s) in the artifact to character set encodings
#udm.BaseDeployableArtifact.fileEncodings=.+\.properties:ISO-8859-1
# Whether to scan this artifact for placeholders when it is imported
#udm.BaseDeployableArtifact.scanPlaceholders=true
# Regular expression that matches file names of text files
#udm.BaseDeployableArtifact.textFileNamesRegex=.+\.(cfg | conf | config | ini | properties | props | txt | asp | aspx | htm | html | jsf | jsp | xht | xhtml | sql | xml | xsd | xsl | xslt)
# The delimiters used indicate placeholders, defaults to '{{ }}'. This is a 5 character string with a space in the middle, the first two are the leading delimiter, the last two are the closing delimiter (inherited from: udm.BaseDeployableArtifact.delimiters)
#udm.BaseDeployableFileArtifact.delimiters={{ }}
# A map that maps regular expressions matching the full path of file(s) in the artifact to character set encodings (inherited from: udm.BaseDeployableArtifact.fileEncodings)
#udm.BaseDeployableFileArtifact.fileEncodings=.+\.properties:ISO-8859-1
# Regular expression that matches file names of text files (inherited from: udm.BaseDeployableArtifact.textFileNamesRegex)
#udm.BaseDeployableFileArtifact.textFileNamesRegex=.+\.(cfg | conf | config | ini | properties | props | txt | asp | aspx | htm | html | jsf | jsp | xht | xhtml | sql | xml | xsd | xsl | xslt)
# The delimiters used indicate placeholders, defaults to '{{ }}'. This is a 5 character string with a space in the middle, the first two are the leading delimiter, the last two are the closing delimiter (inherited from: udm.BaseDeployableArtifact.delimiters)
#udm.BaseDeployableFolderArtifact.delimiters={{ }}
# A map that maps regular expressions matching the full path of file(s) in the artifact to character set encodings (inherited from: udm.BaseDeployableArtifact.fileEncodings)
#udm.BaseDeployableFolderArtifact.fileEncodings=.+\.properties:ISO-8859-1
# Regular expression that matches file names of text files (inherited from: udm.BaseDeployableArtifact.textFileNamesRegex)
#udm.BaseDeployableFolderArtifact.textFileNamesRegex=.+\.(cfg | conf | config | ini | properties | props | txt | asp | aspx | htm | html | jsf | jsp | xht | xhtml | sql | xml | xsd | xsl | xslt)
# If this is true, all password properties are exported as plaintext while exporting the package. If false, exportOnlyPasswordPlaceholders is considered. (inherited from: udm.Version.exportAllPasswords)
#udm.CompositePackage.exportAllPasswords=false
# If this is true, all password properties whose value starts and ends with double curly braces are exported as plaintext. Else, the password values are discarded while exporting the package. (inherited from: udm.Version.exportOnlyPasswordPlaceholders)
#udm.CompositePackage.exportOnlyPasswordPlaceholders=true
# Whether to ignore all the undefined properties used in the manifest or to raise an error, while importing a package. (inherited from: udm.Version.ignoreUndefinedPropertiesInManifest)
#udm.CompositePackage.ignoreUndefinedPropertiesInManifest=true
# Whether to optimize the generated plan after orchestration
#udm.DeployedApplication.optimizePlan=true
# If this is true, all password properties are exported as plaintext while exporting the package. If false, exportOnlyPasswordPlaceholders is considered. (inherited from: udm.Version.exportAllPasswords)
#udm.DeploymentPackage.exportAllPasswords=false
# If this is true, all password properties whose value starts and ends with double curly braces are exported as plaintext. Else, the password values are discarded while exporting the package. (inherited from: udm.Version.exportOnlyPasswordPlaceholders)
#udm.DeploymentPackage.exportOnlyPasswordPlaceholders=true
# Whether to ignore all the undefined properties used in the manifest or to raise an error, while importing a package. (inherited from: udm.Version.ignoreUndefinedPropertiesInManifest)
#udm.DeploymentPackage.ignoreUndefinedPropertiesInManifest=true
# Encrypted Entries
#udm.EncryptedDictionary.encryptedEntries=null
# If set, release conditions are not just verified before planning begins, an equivalent step is also added to the task
#udm.Environment.recheckConditionsAtDeploymentTime=true
# Recheck Conditions At Deployment Time Order
#udm.Environment.recheckConditionsAtDeploymentTimeOrder=9
# If this is true, all password properties are exported as plaintext while exporting the package. If false, exportOnlyPasswordPlaceholders is considered.
#udm.Version.exportAllPasswords=false
# If this is true, all password properties whose value starts and ends with double curly braces are exported as plaintext. Else, the password values are discarded while exporting the package.
#udm.Version.exportOnlyPasswordPlaceholders=true
# Whether to ignore all the undefined properties used in the manifest or to raise an error, while importing a package.
#udm.Version.ignoreUndefinedPropertiesInManifest=true
# The delimiters used indicate placeholders, defaults to '{{ }}'. This is a 5 character string with a space in the middle, the first two are the leading delimiter, the last two are the closing delimiter (inherited from: generic.File.delimiters)
#www.ApacheConfFile.delimiters={{ }}
# A map that maps regular expressions matching the full path of file(s) in the artifact to character set encodings (inherited from: generic.File.fileEncodings)
#www.ApacheConfFile.fileEncodings=.+\.properties:ISO-8859-1
# Regular expression that matches file names of text files (inherited from: generic.File.textFileNamesRegex)
#www.ApacheConfFile.textFileNamesRegex=.+\.(cfg | conf | config | ini | properties | props | txt | asp | aspx | htm | html | jsf | jsp | xht | xhtml | sql | xml | xsd | xsl | xslt)
# Options for the create step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.ProcessedTemplate.createOptions)
#www.ApacheConfFragment.createOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the create operation. (inherited from: generic.ProcessedTemplate.createOrder)
#www.ApacheConfFragment.createOrder=50
# Create the target directory on the generic server if it does not exist. (inherited from: generic.ProcessedTemplate.createTargetDirectory)
#www.ApacheConfFragment.createTargetDirectory=false
# Create Verb
#www.ApacheConfFragment.createVerb=Deploy
# Options for the destroy step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.ProcessedTemplate.destroyOptions)
#www.ApacheConfFragment.destroyOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the destroy operation. (inherited from: generic.ProcessedTemplate.destroyOrder)
#www.ApacheConfFragment.destroyOrder=40
# Destroy Verb
#www.ApacheConfFragment.destroyVerb=Remove
# Additional classpath resources that should be uploaded to the working directory before executing the inspect script. (inherited from: generic.ProcessedTemplate.inspectClasspathResources)
#www.ApacheConfFragment.inspectClasspathResources=null
# Classpath to the script used to inspect the generic container. (inherited from: generic.ProcessedTemplate.inspectScript)
#www.ApacheConfFragment.inspectScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the inspect script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.ProcessedTemplate.inspectTemplateClasspathResources)
#www.ApacheConfFragment.inspectTemplateClasspathResources=null
# Options for the modify step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.ProcessedTemplate.modifyOptions)
#www.ApacheConfFragment.modifyOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the modify operation. (inherited from: generic.ProcessedTemplate.modifyOrder)
#www.ApacheConfFragment.modifyOrder=50
# Modify Verb (inherited from: generic.ProcessedTemplate.modifyVerb)
#www.ApacheConfFragment.modifyVerb=Modify
# Options for the noop step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.ProcessedTemplate.noopOptions)
#www.ApacheConfFragment.noopOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the noop operation. (inherited from: generic.ProcessedTemplate.noopOrder)
#www.ApacheConfFragment.noopOrder=50
# Noop Verb (inherited from: generic.ProcessedTemplate.noopVerb)
#www.ApacheConfFragment.noopVerb=Modify
# Restart Required
#www.ApacheConfFragment.restartRequired=true
# The generic container requires a restart for the NOOP action performed by this deployed. (inherited from: generic.ProcessedTemplate.restartRequiredForNoop)
#www.ApacheConfFragment.restartRequiredForNoop=false
# Target directory name
#www.ApacheConfFragment.targetDirectory=${deployed.container.configurationFragmentDirectory}
# Is the target directory shared by others on the generic server. When true, the target directory is not deleted during a destroy operation; only the artifacts copied to it. (inherited from: generic.ProcessedTemplate.targetDirectoryShared)
#www.ApacheConfFragment.targetDirectoryShared=true
# Target file name
#www.ApacheConfFragment.targetFile=${deployed.name}.conf
# Configuration fragment template file name.
#www.ApacheConfFragment.template=www/apache/${deployed.type}.conf.ftl
# Additional classpath resources that should be uploaded to the working directory before executing the inspect script. (inherited from: generic.Container.inspectClasspathResources)
#www.ApacheHttpdServer.inspectClasspathResources=null
# Classpath to the script used to inspect the generic container. (inherited from: generic.Container.inspectScript)
#www.ApacheHttpdServer.inspectScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the inspect script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.Container.inspectTemplateClasspathResources)
#www.ApacheHttpdServer.inspectTemplateClasspathResources=null
# Additional classpath resources that should be uploaded to the working directory before executing the restart script. (inherited from: generic.Container.restartClasspathResources)
#www.ApacheHttpdServer.restartClasspathResources=null
# The order of the restart container step in the step list. (inherited from: generic.Container.restartOrder)
#www.ApacheHttpdServer.restartOrder=90
# The command to restart or reload Apache. If left blank, the sequence 'stop, start' is used. Arguments containing spaces are not supported
#www.ApacheHttpdServer.restartScript=<#assign restart=(container.restartCommand)!''><#if restart != ''>www/apache/restart<#else>www/apache/stopstart</#if>
# Additional template classpath resources that should be uploaded to the working directory before executing the restart script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.Container.restartTemplateClasspathResources)
#www.ApacheHttpdServer.restartTemplateClasspathResources=null
# Duration (in secs) to wait after the restart server step has been executed
#www.ApacheHttpdServer.restartWaitTime=10
# Additional classpath resources that should be uploaded to the working directory before executing the start script. (inherited from: generic.Container.startClasspathResources)
#www.ApacheHttpdServer.startClasspathResources=null
# The order of the start container step in the step list. (inherited from: generic.Container.startOrder)
#www.ApacheHttpdServer.startOrder=90
# The command to start Apache. Arguments containing spaces are not supported
#www.ApacheHttpdServer.startScript=www/apache/start
# Additional template classpath resources that should be uploaded to the working directory before executing the start script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.Container.startTemplateClasspathResources)
#www.ApacheHttpdServer.startTemplateClasspathResources=null
# Duration (in secs) to wait after the start server step has been executed
#www.ApacheHttpdServer.startWaitTime=10
# Additional classpath resources that should be uploaded to the working directory before executing the stop script. (inherited from: generic.Container.stopClasspathResources)
#www.ApacheHttpdServer.stopClasspathResources=null
# The order of the stop container step in the step list. (inherited from: generic.Container.stopOrder)
#www.ApacheHttpdServer.stopOrder=10
# The command to stop Apache. Arguments containing spaces are not supported
#www.ApacheHttpdServer.stopScript=www/apache/stop
# Additional template classpath resources that should be uploaded to the working directory before executing the stop script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.Container.stopTemplateClasspathResources)
#www.ApacheHttpdServer.stopTemplateClasspathResources=null
# Duration (in secs) to wait after the stop server step has been executed
#www.ApacheHttpdServer.stopWaitTime=10
# Options for the create step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: www.ApacheConfFragment.createOptions)
#www.ApacheProxyPass.createOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the create operation. (inherited from: www.ApacheConfFragment.createOrder)
#www.ApacheProxyPass.createOrder=50
# Create the target directory on the generic server if it does not exist. (inherited from: www.ApacheConfFragment.createTargetDirectory)
#www.ApacheProxyPass.createTargetDirectory=false
# Create Verb (inherited from: www.ApacheConfFragment.createVerb)
#www.ApacheProxyPass.createVerb=Deploy
# Options for the destroy step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: www.ApacheConfFragment.destroyOptions)
#www.ApacheProxyPass.destroyOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the destroy operation. (inherited from: www.ApacheConfFragment.destroyOrder)
#www.ApacheProxyPass.destroyOrder=40
# Destroy Verb (inherited from: www.ApacheConfFragment.destroyVerb)
#www.ApacheProxyPass.destroyVerb=Remove
# Additional classpath resources that should be uploaded to the working directory before executing the inspect script. (inherited from: www.ApacheConfFragment.inspectClasspathResources)
#www.ApacheProxyPass.inspectClasspathResources=null
# Classpath to the script used to inspect the generic container. (inherited from: www.ApacheConfFragment.inspectScript)
#www.ApacheProxyPass.inspectScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the inspect script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: www.ApacheConfFragment.inspectTemplateClasspathResources)
#www.ApacheProxyPass.inspectTemplateClasspathResources=null
# Options for the modify step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: www.ApacheConfFragment.modifyOptions)
#www.ApacheProxyPass.modifyOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the modify operation. (inherited from: www.ApacheConfFragment.modifyOrder)
#www.ApacheProxyPass.modifyOrder=50
# Modify Verb (inherited from: www.ApacheConfFragment.modifyVerb)
#www.ApacheProxyPass.modifyVerb=Modify
# Options for the noop step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: www.ApacheConfFragment.noopOptions)
#www.ApacheProxyPass.noopOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the noop operation. (inherited from: www.ApacheConfFragment.noopOrder)
#www.ApacheProxyPass.noopOrder=50
# Noop Verb (inherited from: www.ApacheConfFragment.noopVerb)
#www.ApacheProxyPass.noopVerb=Modify
# The proxy parameters
#www.ApacheProxyPass.options=
# The generic container requires a restart for the action performed by this deployed. (inherited from: www.ApacheConfFragment.restartRequired)
#www.ApacheProxyPass.restartRequired=true
# The generic container requires a restart for the NOOP action performed by this deployed. (inherited from: www.ApacheConfFragment.restartRequiredForNoop)
#www.ApacheProxyPass.restartRequiredForNoop=false
# Whether to set up a ProxyPassReverse also
#www.ApacheProxyPass.reverse=false
# Target directory name (inherited from: www.ApacheConfFragment.targetDirectory)
#www.ApacheProxyPass.targetDirectory=${deployed.container.configurationFragmentDirectory}
# Is the target directory shared by others on the generic server. When true, the target directory is not deleted during a destroy operation; only the artifacts copied to it. (inherited from: www.ApacheConfFragment.targetDirectoryShared)
#www.ApacheProxyPass.targetDirectoryShared=true
# Target file name (inherited from: www.ApacheConfFragment.targetFile)
#www.ApacheProxyPass.targetFile=${deployed.name}.conf
# Configuration fragment template file name. (inherited from: www.ApacheConfFragment.template)
#www.ApacheProxyPass.template=www/apache/${deployed.type}.conf.ftl
# Options for the create step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: www.ApacheConfFragment.createOptions)
#www.ApacheVirtualHost.createOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the create operation. (inherited from: www.ApacheConfFragment.createOrder)
#www.ApacheVirtualHost.createOrder=50
# Create the target directory on the generic server if it does not exist. (inherited from: www.ApacheConfFragment.createTargetDirectory)
#www.ApacheVirtualHost.createTargetDirectory=false
# Create Verb (inherited from: www.ApacheConfFragment.createVerb)
#www.ApacheVirtualHost.createVerb=Deploy
# Options for the destroy step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: www.ApacheConfFragment.destroyOptions)
#www.ApacheVirtualHost.destroyOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the destroy operation. (inherited from: www.ApacheConfFragment.destroyOrder)
#www.ApacheVirtualHost.destroyOrder=40
# Destroy Verb (inherited from: www.ApacheConfFragment.destroyVerb)
#www.ApacheVirtualHost.destroyVerb=Remove
# Additional classpath resources that should be uploaded to the working directory before executing the inspect script. (inherited from: www.ApacheConfFragment.inspectClasspathResources)
#www.ApacheVirtualHost.inspectClasspathResources=null
# Classpath to the script used to inspect the generic container. (inherited from: www.ApacheConfFragment.inspectScript)
#www.ApacheVirtualHost.inspectScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the inspect script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: www.ApacheConfFragment.inspectTemplateClasspathResources)
#www.ApacheVirtualHost.inspectTemplateClasspathResources=null
# Options for the modify step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: www.ApacheConfFragment.modifyOptions)
#www.ApacheVirtualHost.modifyOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the modify operation. (inherited from: www.ApacheConfFragment.modifyOrder)
#www.ApacheVirtualHost.modifyOrder=50
# Modify Verb (inherited from: www.ApacheConfFragment.modifyVerb)
#www.ApacheVirtualHost.modifyVerb=Modify
# Options for the noop step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: www.ApacheConfFragment.noopOptions)
#www.ApacheVirtualHost.noopOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the noop operation. (inherited from: www.ApacheConfFragment.noopOrder)
#www.ApacheVirtualHost.noopOrder=50
# Noop Verb (inherited from: www.ApacheConfFragment.noopVerb)
#www.ApacheVirtualHost.noopVerb=Modify
# The generic container requires a restart for the action performed by this deployed. (inherited from: www.ApacheConfFragment.restartRequired)
#www.ApacheVirtualHost.restartRequired=true
# The generic container requires a restart for the NOOP action performed by this deployed. (inherited from: www.ApacheConfFragment.restartRequiredForNoop)
#www.ApacheVirtualHost.restartRequiredForNoop=false
# Target directory name (inherited from: www.ApacheConfFragment.targetDirectory)
#www.ApacheVirtualHost.targetDirectory=${deployed.container.configurationFragmentDirectory}
# Is the target directory shared by others on the generic server. When true, the target directory is not deleted during a destroy operation; only the artifacts copied to it. (inherited from: www.ApacheConfFragment.targetDirectoryShared)
#www.ApacheVirtualHost.targetDirectoryShared=true
# Target file name (inherited from: www.ApacheConfFragment.targetFile)
#www.ApacheVirtualHost.targetFile=${deployed.name}.conf
# Configuration fragment template file name. (inherited from: www.ApacheConfFragment.template)
#www.ApacheVirtualHost.template=www/apache/${deployed.type}.conf.ftl
# If set to true, files are directly copied to the target directory without first being uploaded to the staging or temporary directory (like versions of XL Deploy prior to 4.0.0) (inherited from: generic.CopiedArtifact.copyDirectlyToTargetPath)
#www.DeployedApacheConfFile.copyDirectlyToTargetPath=false
# Options for the create step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.CopiedArtifact.createOptions)
#www.DeployedApacheConfFile.createOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the create operation. (inherited from: generic.CopiedArtifact.createOrder)
#www.DeployedApacheConfFile.createOrder=50
# Create the target directory on the generic server if it does not exist. (inherited from: generic.CopiedArtifact.createTargetDirectory)
#www.DeployedApacheConfFile.createTargetDirectory=false
# Create Verb
#www.DeployedApacheConfFile.createVerb=Deploy
# Options for the destroy step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.CopiedArtifact.destroyOptions)
#www.DeployedApacheConfFile.destroyOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the destroy operation. (inherited from: generic.CopiedArtifact.destroyOrder)
#www.DeployedApacheConfFile.destroyOrder=40
# Destroy Verb
#www.DeployedApacheConfFile.destroyVerb=Remove
# Additional classpath resources that should be uploaded to the working directory before executing the inspect script. (inherited from: generic.CopiedArtifact.inspectClasspathResources)
#www.DeployedApacheConfFile.inspectClasspathResources=null
# Classpath to the script used to inspect the generic container. (inherited from: generic.CopiedArtifact.inspectScript)
#www.DeployedApacheConfFile.inspectScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the inspect script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.CopiedArtifact.inspectTemplateClasspathResources)
#www.DeployedApacheConfFile.inspectTemplateClasspathResources=null
# Options for the modify step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.CopiedArtifact.modifyOptions)
#www.DeployedApacheConfFile.modifyOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the modify operation. (inherited from: generic.CopiedArtifact.modifyOrder)
#www.DeployedApacheConfFile.modifyOrder=50
# Modify Verb (inherited from: generic.CopiedArtifact.modifyVerb)
#www.DeployedApacheConfFile.modifyVerb=Modify
# Options for the noop step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.CopiedArtifact.noopOptions)
#www.DeployedApacheConfFile.noopOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the noop operation. (inherited from: generic.CopiedArtifact.noopOrder)
#www.DeployedApacheConfFile.noopOrder=50
# Noop Verb (inherited from: generic.CopiedArtifact.noopVerb)
#www.DeployedApacheConfFile.noopVerb=Modify
# If set to true, preserve the existing files on the remote host (do not delete the copied files during the destroy operation).  (inherited from: generic.CopiedArtifact.preserveExistingFiles)
#www.DeployedApacheConfFile.preserveExistingFiles=false
# Restart Required
#www.DeployedApacheConfFile.restartRequired=true
# The generic container requires a restart for the NOOP action performed by this deployed. (inherited from: generic.CopiedArtifact.restartRequiredForNoop)
#www.DeployedApacheConfFile.restartRequiredForNoop=false
# Target directory name
#www.DeployedApacheConfFile.targetDirectory=${deployed.container.configurationFragmentDirectory}
# Is the target directory shared by others on the generic server. When true, the target directory is not deleted during a destroy operation; only the artifacts copied to it. (inherited from: generic.CopiedArtifact.targetDirectoryShared)
#www.DeployedApacheConfFile.targetDirectoryShared=true
# Target file name
#www.DeployedApacheConfFile.targetFile=${deployed.name}
# If set to true, the sub directories on the target machine are not deleted if files other than that copied by XL Deploy are present. Please note that setting this option to true will cause the removal process to be a slower.  (inherited from: generic.CopiedArtifact.targetPathSharedSubDirectories)
#www.DeployedApacheConfFile.targetPathSharedSubDirectories=false
# If set to true, files are directly copied to the target directory without first being uploaded to the staging or temporary directory (like versions of XL Deploy prior to 4.0.0) (inherited from: generic.CopiedArtifact.copyDirectlyToTargetPath)
#www.PublishedWebContent.copyDirectlyToTargetPath=false
# Options for the create step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.CopiedArtifact.createOptions)
#www.PublishedWebContent.createOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the create operation. (inherited from: generic.CopiedArtifact.createOrder)
#www.PublishedWebContent.createOrder=50
# Create the target directory on the generic server if it does not exist. (inherited from: generic.CopiedArtifact.createTargetDirectory)
#www.PublishedWebContent.createTargetDirectory=false
# Create Verb
#www.PublishedWebContent.createVerb=Deploy
# Options for the destroy step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.CopiedArtifact.destroyOptions)
#www.PublishedWebContent.destroyOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the destroy operation. (inherited from: generic.CopiedArtifact.destroyOrder)
#www.PublishedWebContent.destroyOrder=40
# Destroy Verb
#www.PublishedWebContent.destroyVerb=Remove
# Additional classpath resources that should be uploaded to the working directory before executing the inspect script. (inherited from: generic.CopiedArtifact.inspectClasspathResources)
#www.PublishedWebContent.inspectClasspathResources=null
# Classpath to the script used to inspect the generic container. (inherited from: generic.CopiedArtifact.inspectScript)
#www.PublishedWebContent.inspectScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the inspect script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.CopiedArtifact.inspectTemplateClasspathResources)
#www.PublishedWebContent.inspectTemplateClasspathResources=null
# Options for the modify step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.CopiedArtifact.modifyOptions)
#www.PublishedWebContent.modifyOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the modify operation. (inherited from: generic.CopiedArtifact.modifyOrder)
#www.PublishedWebContent.modifyOrder=50
# Modify Verb (inherited from: generic.CopiedArtifact.modifyVerb)
#www.PublishedWebContent.modifyVerb=Modify
# Options for the noop step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.CopiedArtifact.noopOptions)
#www.PublishedWebContent.noopOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the noop operation. (inherited from: generic.CopiedArtifact.noopOrder)
#www.PublishedWebContent.noopOrder=50
# Noop Verb (inherited from: generic.CopiedArtifact.noopVerb)
#www.PublishedWebContent.noopVerb=Modify
# If set to true, preserve the existing files on the remote host (do not delete the copied files during the destroy operation).  (inherited from: generic.CopiedArtifact.preserveExistingFiles)
#www.PublishedWebContent.preserveExistingFiles=false
# Restart Required
#www.PublishedWebContent.restartRequired=false
# The generic container requires a restart for the NOOP action performed by this deployed. (inherited from: generic.CopiedArtifact.restartRequiredForNoop)
#www.PublishedWebContent.restartRequiredForNoop=false
# Target directory name
#www.PublishedWebContent.targetDirectory=<#assign target=(deployed.virtualHost.documentRoot)!''/><#if target != ''>${target}<#else>${deployed.container.defaultDocumentRoot}</#if>
# Is the target directory shared by others on the generic server. When true, the target directory is not deleted during a destroy operation; only the artifacts copied to it. (inherited from: generic.CopiedArtifact.targetDirectoryShared)
#www.PublishedWebContent.targetDirectoryShared=true
# Target File
#www.PublishedWebContent.targetFile=null
# If set to true, the sub directories on the target machine are not deleted if files other than that copied by XL Deploy are present. Please note that setting this option to true will cause the removal process to be a slower.  (inherited from: generic.CopiedArtifact.targetPathSharedSubDirectories)
#www.PublishedWebContent.targetPathSharedSubDirectories=false
# The delimiters used indicate placeholders, defaults to '{{ }}'. This is a 5 character string with a space in the middle, the first two are the leading delimiter, the last two are the closing delimiter (inherited from: generic.Folder.delimiters)
#www.WebContent.delimiters={{ }}
# A map that maps regular expressions matching the full path of file(s) in the artifact to character set encodings (inherited from: generic.Folder.fileEncodings)
#www.WebContent.fileEncodings=.+\.properties:ISO-8859-1
# Regular expression that matches file names of text files (inherited from: generic.Folder.textFileNamesRegex)
#www.WebContent.textFileNamesRegex=.+\.(cfg | conf | config | ini | properties | props | txt | asp | aspx | htm | html | jsf | jsp | xht | xhtml | sql | xml | xsd | xsl | xslt)
# Delay between each attempt in seconds.
#xl.Satellite_syncPlugins.delay=10
# Number of attempts to try to reach the satellite after the restart.
#xl.Satellite_syncPlugins.maxAttempts=10
